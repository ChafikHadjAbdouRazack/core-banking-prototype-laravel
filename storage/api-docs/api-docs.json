{
    "openapi": "3.0.0",
    "info": {
        "title": "FinAegis Core Banking API",
        "description": "Open Source Core Banking as a Service - A modern, scalable, and secure core banking platform built with Laravel 12, featuring event sourcing, domain-driven design, workflow orchestration, and quantum-resistant security measures.",
        "contact": {
            "name": "FinAegis Support",
            "email": "support@finaegis.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/accounts": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Create a new account",
                "description": "Creates a new bank account for a user with an optional initial balance",
                "operationId": "createAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid",
                                    "name"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "660e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Savings Account"
                                    },
                                    "initial_balance": {
                                        "description": "Initial balance in cents",
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 10000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account details",
                "description": "Retrieves detailed information about a specific account",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an account",
                "description": "Deletes an account. Account must have zero balance and not be frozen.",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deletion initiated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account deletion initiated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot delete account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/freeze": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Freeze an account",
                "description": "Freezes an account to prevent any transactions",
                "operationId": "freezeAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Suspicious activity detected"
                                    },
                                    "authorized_by": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account frozen successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account frozen successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account already frozen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/unfreeze": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Unfreeze an account",
                "description": "Unfreezes a previously frozen account",
                "operationId": "unfreezeAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Investigation completed"
                                    },
                                    "authorized_by": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account unfrozen successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account unfrozen successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account not frozen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/balance": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Get account balance",
                "description": "Retrieves the current balance and turnover information for an account",
                "operationId": "getAccountBalance",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance information retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Balance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/balance/summary": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Get account balance summary",
                "description": "Retrieves detailed balance statistics including 12-month turnover data",
                "operationId": "getAccountBalanceSummary",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance summary retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "current_balance": {
                                                    "type": "integer",
                                                    "example": 50000
                                                },
                                                "frozen": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_debit_12_months": {
                                                            "type": "integer",
                                                            "example": 120000
                                                        },
                                                        "total_credit_12_months": {
                                                            "type": "integer",
                                                            "example": 170000
                                                        },
                                                        "average_monthly_debit": {
                                                            "type": "number",
                                                            "example": 10000
                                                        },
                                                        "average_monthly_credit": {
                                                            "type": "number",
                                                            "example": 14166.67
                                                        },
                                                        "months_analyzed": {
                                                            "type": "integer",
                                                            "example": 12
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "monthly_turnovers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "year": {
                                                                "type": "integer",
                                                                "example": 2024
                                                            },
                                                            "debit": {
                                                                "type": "integer",
                                                                "example": 10000
                                                            },
                                                            "credit": {
                                                                "type": "integer",
                                                                "example": 15000
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "List all polls",
                "description": "Retrieve a paginated list of polls with optional filtering",
                "operationId": "6e193446b08121fa820e77c1a32e6c5d",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by poll status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by poll type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "single_choice",
                                "multiple_choice",
                                "weighted_choice",
                                "yes_no",
                                "ranked_choice"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of polls per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Poll"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Create a new poll",
                "description": "Create a new governance poll",
                "operationId": "cfe7460dbf9e8b80cc0122d588147993",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type",
                                    "options",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Should we add support for Japanese Yen?"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Proposal to add JPY as supported currency"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "single_choice",
                                            "multiple_choice",
                                            "weighted_choice",
                                            "yes_no",
                                            "ranked_choice"
                                        ]
                                    },
                                    "options": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "label": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "required_participation": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "voting_power_strategy": {
                                        "type": "string",
                                        "enum": [
                                            "one_user_one_vote",
                                            "asset_weighted_vote"
                                        ]
                                    },
                                    "execution_workflow": {
                                        "type": "string",
                                        "example": "AddAssetWorkflow"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Poll created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/active": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get active polls",
                "description": "Retrieve all currently active polls that are available for voting",
                "operationId": "f13be49b1a672f49c8513b45c4d9fe46",
                "responses": {
                    "200": {
                        "description": "List of active polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Poll"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/polls/{uuid}": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get poll details",
                "description": "Retrieve detailed information about a specific poll",
                "operationId": "4a5d22fa28a78c7c00336312b7e412d6",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                }
            }
        },
        "/api/polls/{uuid}/activate": {
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Activate a poll",
                "description": "Activate a draft poll to make it available for voting",
                "operationId": "1f3250511c8a2af8828834d02eda9f57",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Poll cannot be activated"
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/{uuid}/vote": {
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Cast a vote",
                "description": "Cast a vote in an active poll",
                "operationId": "2efbbf8861a1235c1015ed44b7d9b056",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "selected_options"
                                ],
                                "properties": {
                                    "selected_options": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vote cast successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Vote"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot vote in this poll"
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/{uuid}/results": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get poll results",
                "description": "Retrieve current results for a poll",
                "operationId": "e4386a648a2adc9a8b8e2c77e409ea96",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PollResult"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                }
            }
        },
        "/api/polls/{uuid}/voting-power": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get user's voting power",
                "description": "Check the authenticated user's voting power for a specific poll",
                "operationId": "5a581e2bc5f798877c24ec9c8c8d8ed8",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's voting power",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "voting_power": {
                                            "type": "integer"
                                        },
                                        "can_vote": {
                                            "type": "boolean"
                                        },
                                        "has_voted": {
                                            "type": "boolean"
                                        },
                                        "strategy": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/deposit": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Deposit money to an account",
                "description": "Deposits money into a specified account",
                "operationId": "depositToAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 10000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Monthly salary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deposit successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "new_balance": {
                                                    "type": "integer",
                                                    "example": 60000
                                                },
                                                "amount_deposited": {
                                                    "type": "integer",
                                                    "example": 10000
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "deposit"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deposit successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot deposit to frozen account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/withdraw": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Withdraw money from an account",
                "description": "Withdraws money from a specified account",
                "operationId": "withdrawFromAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "ATM withdrawal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Withdrawal successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "new_balance": {
                                                    "type": "integer",
                                                    "example": 45000
                                                },
                                                "amount_withdrawn": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "withdrawal"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Withdrawal successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient balance or frozen account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/transfers": {
            "post": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Create a money transfer",
                "description": "Transfers money from one account to another",
                "operationId": "createTransfer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_account_uuid",
                                    "to_account_uuid",
                                    "amount"
                                ],
                                "properties": {
                                    "from_account_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "to_account_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "660e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Payment for services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transfer initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transfer_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "from_account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "to_account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer initiated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or business rule violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get user's voting history",
                "description": "Retrieve the authenticated user's voting history",
                "operationId": "552d3ad7dc75be8e39bc19d16c5fa972",
                "parameters": [
                    {
                        "name": "poll_id",
                        "in": "query",
                        "description": "Filter by specific poll ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of votes per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's voting history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vote"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/{id}": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get vote details",
                "description": "Retrieve detailed information about a specific vote",
                "operationId": "c2a9b1dfbe3ec738a52437c63f1be8ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Vote"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vote not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/{id}/verify": {
            "post": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Verify vote integrity",
                "description": "Verify the cryptographic signature of a vote",
                "operationId": "8f09df8ed257cc1fa8e0a0da6d92ae92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote verification result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "verified": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vote not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/stats": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get user's voting statistics",
                "description": "Retrieve statistics about the user's voting activity",
                "operationId": "f2be71d66073ac97b0a5bc8166b53aeb",
                "responses": {
                    "200": {
                        "description": "User's voting statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_votes": {
                                            "type": "integer"
                                        },
                                        "total_voting_power": {
                                            "type": "integer"
                                        },
                                        "recent_votes": {
                                            "description": "Votes in last 30 days",
                                            "type": "integer"
                                        },
                                        "avg_voting_power": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "participation_rate": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account",
                "required": [
                    "uuid",
                    "user_uuid",
                    "name",
                    "balance",
                    "frozen"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "user_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "name": {
                        "type": "string",
                        "example": "Savings Account"
                    },
                    "balance": {
                        "description": "Balance in cents",
                        "type": "integer",
                        "example": 50000
                    },
                    "frozen": {
                        "description": "Whether the account is frozen",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "title": "Transaction",
                "required": [
                    "uuid",
                    "account_uuid",
                    "type",
                    "amount",
                    "balance_after",
                    "description",
                    "hash"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "770e8400-e29b-41d4-a716-446655440000"
                    },
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deposit",
                            "withdrawal"
                        ],
                        "example": "deposit"
                    },
                    "amount": {
                        "description": "Amount in cents",
                        "type": "integer",
                        "example": 10000
                    },
                    "balance_after": {
                        "description": "Balance after transaction in cents",
                        "type": "integer",
                        "example": 60000
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly salary deposit"
                    },
                    "hash": {
                        "description": "SHA3-512 transaction hash",
                        "type": "string",
                        "example": "3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Transfer": {
                "title": "Transfer",
                "required": [
                    "uuid",
                    "from_account_uuid",
                    "to_account_uuid",
                    "amount",
                    "description",
                    "status",
                    "hash"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "880e8400-e29b-41d4-a716-446655440000"
                    },
                    "from_account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "to_account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "amount": {
                        "description": "Amount in cents",
                        "type": "integer",
                        "example": 5000
                    },
                    "description": {
                        "type": "string",
                        "example": "Payment for services"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "hash": {
                        "description": "SHA3-512 transfer hash",
                        "type": "string",
                        "example": "4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:01Z",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Balance": {
                "title": "Balance",
                "required": [
                    "account_uuid",
                    "balance",
                    "frozen"
                ],
                "properties": {
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "balance": {
                        "description": "Current balance in cents",
                        "type": "integer",
                        "example": 50000
                    },
                    "frozen": {
                        "type": "boolean",
                        "example": false
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "turnover": {
                        "properties": {
                            "total_debit": {
                                "type": "integer",
                                "example": 100000
                            },
                            "total_credit": {
                                "type": "integer",
                                "example": 150000
                            },
                            "month": {
                                "type": "integer",
                                "example": 1
                            },
                            "year": {
                                "type": "integer",
                                "example": 2024
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Asset": {
                "title": "Asset",
                "required": [
                    "code",
                    "name",
                    "type",
                    "precision",
                    "is_active"
                ],
                "properties": {
                    "code": {
                        "description": "Asset code (e.g., USD, EUR, BTC)",
                        "type": "string",
                        "example": "USD"
                    },
                    "name": {
                        "type": "string",
                        "example": "US Dollar"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "fiat",
                            "crypto",
                            "commodity",
                            "custom"
                        ],
                        "example": "fiat"
                    },
                    "precision": {
                        "description": "Number of decimal places",
                        "type": "integer",
                        "example": 2
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "metadata": {
                        "description": "Additional asset metadata",
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "ExchangeRate": {
                "title": "Exchange Rate",
                "required": [
                    "from_asset_code",
                    "to_asset_code",
                    "rate",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "from_asset_code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "to_asset_code": {
                        "type": "string",
                        "example": "EUR"
                    },
                    "rate": {
                        "description": "Exchange rate with 10 decimal precision",
                        "type": "string",
                        "example": "0.8500000000"
                    },
                    "bid": {
                        "type": "string",
                        "example": "0.8495000000",
                        "nullable": true
                    },
                    "ask": {
                        "type": "string",
                        "example": "0.8505000000",
                        "nullable": true
                    },
                    "source": {
                        "description": "Rate source",
                        "type": "string",
                        "example": "manual"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "valid_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "AccountBalance": {
                "title": "Account Balance",
                "required": [
                    "account_uuid",
                    "asset_code",
                    "balance"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "asset_code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "balance": {
                        "description": "Balance in smallest unit (cents for USD)",
                        "type": "integer",
                        "example": 50000
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                },
                "type": "object"
            },
            "Poll": {
                "title": "Poll",
                "required": [
                    "id",
                    "title",
                    "type",
                    "status",
                    "options",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Should we add support for Japanese Yen?"
                    },
                    "description": {
                        "type": "string",
                        "example": "This poll determines whether to add JPY support to the platform",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "single_choice",
                            "multiple_choice",
                            "weighted_choice",
                            "yes_no",
                            "ranked_choice"
                        ],
                        "example": "yes_no"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "completed",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "yes"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "Yes, add JPY support"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "voting_power_strategy": {
                        "type": "string",
                        "example": "OneUserOneVoteStrategy"
                    },
                    "execution_workflow": {
                        "type": "string",
                        "example": "AddAssetWorkflow",
                        "nullable": true
                    },
                    "min_participation": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "winning_threshold": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5,
                        "nullable": true
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-08T00:00:00Z"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "votes_count": {
                        "description": "Total number of votes",
                        "type": "integer",
                        "example": 150
                    },
                    "total_voting_power": {
                        "description": "Total voting power cast",
                        "type": "integer",
                        "example": 500
                    }
                },
                "type": "object"
            },
            "Vote": {
                "title": "Vote",
                "required": [
                    "id",
                    "poll_id",
                    "user_uuid",
                    "selected_options",
                    "voting_power",
                    "voted_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "poll_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "selected_options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "yes"
                        ]
                    },
                    "voting_power": {
                        "type": "integer",
                        "example": 10
                    },
                    "signature": {
                        "type": "string",
                        "example": "abc123def456",
                        "nullable": true
                    },
                    "voted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    }
                },
                "type": "object"
            },
            "PollResult": {
                "title": "Poll Result",
                "required": [
                    "poll",
                    "results",
                    "participation"
                ],
                "properties": {
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "results": {
                        "description": "Vote results by option",
                        "type": "object",
                        "example": {
                            "yes": {
                                "votes": 75,
                                "voting_power": 250
                            },
                            "no": {
                                "votes": 25,
                                "voting_power": 100
                            }
                        }
                    },
                    "participation": {
                        "properties": {
                            "total_votes": {
                                "type": "integer",
                                "example": 100
                            },
                            "total_voting_power": {
                                "type": "integer",
                                "example": 350
                            },
                            "participation_rate": {
                                "type": "number",
                                "format": "float",
                                "example": 0.25
                            },
                            "winning_option": {
                                "type": "string",
                                "example": "yes",
                                "nullable": true
                            },
                            "meets_threshold": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    },
                    "calculated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Error": {
                "title": "Error Response",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "error": {
                        "type": "string",
                        "example": "VALIDATION_ERROR",
                        "nullable": true
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format: Bearer {token}",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Accounts",
            "description": "Account management operations"
        },
        {
            "name": "Transactions",
            "description": "Transaction operations (deposits and withdrawals)"
        },
        {
            "name": "Transfers",
            "description": "Money transfer operations between accounts"
        },
        {
            "name": "Balance",
            "description": "Balance inquiry and account statistics"
        },
        {
            "name": "Governance - Polls",
            "description": "Poll management and voting operations"
        },
        {
            "name": "Governance - Votes",
            "description": "Vote management and history operations"
        }
    ]
}