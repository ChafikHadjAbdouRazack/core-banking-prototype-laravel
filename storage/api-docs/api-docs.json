{
    "openapi": "3.0.0",
    "info": {
        "title": "FinAegis Core Banking API v2",
        "description": "Modern, scalable, and secure core banking platform API. This is version 2 of the FinAegis API with improved performance, better error handling, and extended functionality.",
        "contact": {
            "name": "FinAegis Support",
            "url": "https://finaegis.org/support",
            "email": "support@finaegis.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "http://finaegis.local/api/v2",
            "description": "API Server"
        }
    ],
    "paths": {
        "/gcu": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get GCU information",
                "description": "Get current information about the Global Currency Unit including composition and value",
                "operationId": "getGCUInfo",
                "responses": {
                    "200": {
                        "description": "GCU information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Global Currency Unit"
                                                },
                                                "symbol": {
                                                    "type": "string",
                                                    "example": "Ç¤"
                                                },
                                                "current_value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.0975
                                                },
                                                "value_currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "last_rebalanced": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "next_rebalance": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "composition": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "asset_code": {
                                                                "type": "string"
                                                            },
                                                            "asset_name": {
                                                                "type": "string"
                                                            },
                                                            "weight": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "value_contribution": {
                                                                "type": "number",
                                                                "format": "float"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_supply": {
                                                            "type": "integer"
                                                        },
                                                        "holders_count": {
                                                            "type": "integer"
                                                        },
                                                        "24h_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/value-history": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get GCU value history",
                "description": "Get historical value data for the Global Currency Unit",
                "operationId": "getGCUValueHistory",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for history",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "30d",
                            "enum": [
                                "24h",
                                "7d",
                                "30d",
                                "90d",
                                "1y",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Data interval",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "daily",
                            "enum": [
                                "hourly",
                                "daily",
                                "weekly",
                                "monthly"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GCU value history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "change": {
                                                        "type": "number",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "period": {
                                                    "type": "string"
                                                },
                                                "interval": {
                                                    "type": "string"
                                                },
                                                "start_value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "end_value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_change": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_change_percent": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/governance/active-polls": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get active GCU governance polls",
                "description": "Get currently active polls related to GCU governance",
                "operationId": "getGCUActivePolls",
                "responses": {
                    "200": {
                        "description": "Active GCU polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "participation_rate": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "current_results": {
                                                        "type": "object"
                                                    },
                                                    "time_remaining": {
                                                        "properties": {
                                                            "days": {
                                                                "type": "integer"
                                                            },
                                                            "hours": {
                                                                "type": "integer"
                                                            },
                                                            "human_readable": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/composition": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get real-time GCU composition data",
                "description": "Get detailed real-time composition data for the Global Currency Unit including current weights, values, and recent changes",
                "operationId": "getGCUComposition",
                "responses": {
                    "200": {
                        "description": "GCU composition data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "basket_code": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "total_value_usd": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "composition": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "asset_code": {
                                                                "type": "string"
                                                            },
                                                            "asset_name": {
                                                                "type": "string"
                                                            },
                                                            "asset_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "fiat",
                                                                    "crypto",
                                                                    "commodity"
                                                                ]
                                                            },
                                                            "weight": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "current_price_usd": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "value_contribution_usd": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "percentage_of_basket": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "24h_change": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "7d_change": {
                                                                "type": "number",
                                                                "format": "float"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "rebalancing": {
                                                    "properties": {
                                                        "frequency": {
                                                            "type": "string"
                                                        },
                                                        "last_rebalanced": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "next_rebalance": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "automatic": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "performance": {
                                                    "properties": {
                                                        "24h_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "24h_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/supported-banks": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get supported banks for GCU",
                "description": "Get list of banks that support GCU deposits and their coverage",
                "operationId": "getGCUSupportedBanks",
                "responses": {
                    "200": {
                        "description": "Supported banks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    },
                                                    "deposit_protection": {
                                                        "type": "string"
                                                    },
                                                    "deposit_protection_amount": {
                                                        "type": "integer"
                                                    },
                                                    "supported_currencies": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "features": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "operational",
                                                            "degraded",
                                                            "maintenance"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/buy": {
            "post": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Buy GCU tokens",
                "description": "Purchase GCU tokens using fiat currency",
                "operationId": "buyGCU",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount to spend in source currency",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 100,
                                        "example": 1000
                                    },
                                    "currency": {
                                        "description": "Source currency code (EUR, USD, GBP, CHF)",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "account_uuid": {
                                        "description": "Account UUID (optional, defaults to user's primary account)",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GCU purchase successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "spent_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "spent_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "received_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 912.45
                                                },
                                                "received_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0.91245
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "new_gcu_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1912.45
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully purchased 912.45 GCU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient balance or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/sell": {
            "post": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Sell GCU tokens",
                "description": "Sell GCU tokens for fiat currency",
                "operationId": "sellGCU",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount of GCU to sell",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 10,
                                        "example": 100
                                    },
                                    "currency": {
                                        "description": "Target currency code (EUR, USD, GBP, CHF)",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "account_uuid": {
                                        "description": "Account UUID (optional, defaults to user's primary account)",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GCU sale successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "sold_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "sold_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "received_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 109
                                                },
                                                "received_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.0956
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.1
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "new_gcu_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 812.45
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully sold 100.00 GCU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient GCU balance or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/quote": {
            "get": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Get GCU trading quote",
                "description": "Get a quote for buying or selling GCU",
                "operationId": "getGCUQuote",
                "parameters": [
                    {
                        "name": "operation",
                        "in": "query",
                        "description": "Operation type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "buy",
                                "sell"
                            ]
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount (in source currency for buy, in GCU for sell)",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0.01
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Fiat currency code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EUR",
                                "USD",
                                "GBP",
                                "CHF"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trading quote",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "operation": {
                                                    "type": "string",
                                                    "example": "buy"
                                                },
                                                "input_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "input_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "output_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 912.45
                                                },
                                                "output_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0.91245
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "fee_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1
                                                },
                                                "quote_valid_until": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "minimum_amount": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "maximum_amount": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/trading-limits": {
            "get": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Get user's GCU trading limits",
                "description": "Get the authenticated user's trading limits for GCU operations",
                "operationId": "getGCUTradingLimits",
                "responses": {
                    "200": {
                        "description": "Trading limits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "daily_buy_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10000
                                                },
                                                "daily_sell_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10000
                                                },
                                                "daily_buy_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 2500
                                                },
                                                "daily_sell_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "monthly_buy_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100000
                                                },
                                                "monthly_sell_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100000
                                                },
                                                "monthly_buy_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15000
                                                },
                                                "monthly_sell_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "minimum_buy_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "minimum_sell_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "kyc_level": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "limits_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Public API"
                ],
                "summary": "Get API information",
                "description": "Returns information about the API including version, status, and available endpoints",
                "operationId": "getApiInfo",
                "responses": {
                    "200": {
                        "description": "API information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "FinAegis Public API"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "2.0.0"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "operational"
                                        },
                                        "endpoints": {
                                            "properties": {
                                                "accounts": {
                                                    "type": "string",
                                                    "example": "/v2/accounts"
                                                },
                                                "assets": {
                                                    "type": "string",
                                                    "example": "/v2/assets"
                                                },
                                                "exchange_rates": {
                                                    "type": "string",
                                                    "example": "/v2/exchange-rates"
                                                },
                                                "baskets": {
                                                    "type": "string",
                                                    "example": "/v2/baskets"
                                                },
                                                "webhooks": {
                                                    "type": "string",
                                                    "example": "/v2/webhooks"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "documentation": {
                                            "type": "string",
                                            "example": "https://docs.finaegis.org"
                                        },
                                        "support": {
                                            "type": "string",
                                            "example": "api@finaegis.org"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "tags": [
                    "Public API"
                ],
                "summary": "Get API status",
                "description": "Returns the current operational status of the API and its components",
                "operationId": "getApiStatus",
                "responses": {
                    "200": {
                        "description": "API status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "operational"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "components": {
                                            "properties": {
                                                "api": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "database": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "redis": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "bank_connectors": {
                                                    "properties": {
                                                        "paysera": {
                                                            "type": "string",
                                                            "example": "operational"
                                                        },
                                                        "deutsche_bank": {
                                                            "type": "string",
                                                            "example": "operational"
                                                        },
                                                        "santander": {
                                                            "type": "string",
                                                            "example": "degraded"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "metrics": {
                                            "properties": {
                                                "response_time_ms": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "uptime_percentage": {
                                                    "type": "number",
                                                    "example": 99.95
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get voting proposals",
                "operationId": "f318ecdd62462b7e0eb0109e731d3ec0",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, upcoming, past)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "upcoming",
                                "past"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of voting proposals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "voting_starts_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "voting_ends_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "participation_rate": {
                                                        "type": "number"
                                                    },
                                                    "approval_rate": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals/{id}": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get proposal details",
                "operationId": "a413e42f0d3750c7898ea1bc3daf6052",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proposal details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals/{id}/vote": {
            "post": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Cast a vote",
                "operationId": "26e7c1223824df9748e1bc7d40edfe53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vote": {
                                        "type": "string",
                                        "enum": [
                                            "for",
                                            "against",
                                            "abstain"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vote cast successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "vote": {
                                                    "type": "string"
                                                },
                                                "voting_power": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/gcu/voting/my-votes": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get user's voting history",
                "operationId": "1c38a74569aeed1d38baca6dd7c7e40f",
                "responses": {
                    "200": {
                        "description": "User's voting history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "proposal_id": {
                                                        "type": "integer"
                                                    },
                                                    "proposal_title": {
                                                        "type": "string"
                                                    },
                                                    "vote": {
                                                        "type": "string"
                                                    },
                                                    "voting_power": {
                                                        "type": "number"
                                                    },
                                                    "voted_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/webhooks": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List webhooks",
                "description": "Get a list of all configured webhooks for the authenticated user",
                "operationId": "listWebhooks",
                "responses": {
                    "200": {
                        "description": "List of webhooks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "format": "url"
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "is_active": {
                                                        "type": "boolean"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "last_triggered_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Create webhook",
                "description": "Create a new webhook endpoint",
                "operationId": "createWebhook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "events"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/webhook"
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "account.created",
                                            "transaction.completed"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Production webhook for transaction notifications"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Webhook created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "example": "whsec_[redacted]"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/{id}": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Get webhook details",
                "description": "Get details of a specific webhook",
                "operationId": "getWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "successful_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "failed_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "last_triggered_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Update webhook",
                "description": "Update webhook configuration",
                "operationId": "updateWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook updated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Delete webhook",
                "description": "Delete a webhook endpoint",
                "operationId": "deleteWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Webhook deleted"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/{id}/deliveries": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List webhook deliveries",
                "description": "Get delivery history for a webhook",
                "operationId": "listWebhookDeliveries",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "success",
                                "failed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook deliveries"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/events": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List available webhook events",
                "description": "Get a list of all available webhook events that can be subscribed to",
                "operationId": "listWebhookEvents",
                "responses": {
                    "200": {
                        "description": "Available webhook events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "transaction": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "transfer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "basket": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "governance": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 20
                    },
                    "total": {
                        "type": "integer",
                        "example": 200
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "to": {
                        "type": "integer",
                        "example": 20
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "GCU",
            "description": "Global Currency Unit operations"
        },
        {
            "name": "GCU Trading",
            "description": "Buy and sell Global Currency Unit operations"
        },
        {
            "name": "Webhooks",
            "description": "Webhook management for real-time event notifications"
        },
        {
            "name": "Public API",
            "description": "Public API endpoints for external developers"
        },
        {
            "name": "GCU Voting",
            "description": "GCU Voting"
        }
    ]
}