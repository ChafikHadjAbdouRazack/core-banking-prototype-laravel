{
    "openapi": "3.0.0",
    "info": {
        "title": "FinAegis Core Banking API",
        "description": "Open Source Core Banking as a Service - A modern, scalable, and secure core banking platform built with Laravel 12, featuring event sourcing, domain-driven design, workflow orchestration, and quantum-resistant security measures.",
        "contact": {
            "name": "FinAegis Support",
            "email": "support@finaegis.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://finaegis.local/api/v2",
            "description": "API Server"
        },
        {
            "url": "http://finaegis.local/api/v2",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/ai/chat": {
            "post": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Send a message to the AI agent",
                "description": "Send a message to the AI agent and receive a response",
                "operationId": "aiChat",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "What is my account balance?"
                                    },
                                    "conversation_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "context": {
                                        "type": "object",
                                        "example": {
                                            "account_id": "123"
                                        }
                                    },
                                    "model": {
                                        "type": "string",
                                        "enum": [
                                            "gpt-4",
                                            "gpt-3.5-turbo",
                                            "claude-3"
                                        ],
                                        "example": "gpt-4"
                                    },
                                    "temperature": {
                                        "type": "number",
                                        "maximum": 2,
                                        "minimum": 0,
                                        "example": 0.7
                                    },
                                    "stream": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "conversation_id": {
                                            "type": "string"
                                        },
                                        "message_id": {
                                            "type": "string"
                                        },
                                        "response": {
                                            "type": "string"
                                        },
                                        "confidence": {
                                            "type": "number"
                                        },
                                        "tools_used": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "context": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/conversations": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "List user conversations",
                "description": "Get a list of all conversations for the authenticated user",
                "operationId": "listConversations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of conversations to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of conversations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "last_message": {
                                                "type": "string"
                                            },
                                            "message_count": {
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/conversations/{conversationId}": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Get conversation history",
                "description": "Retrieve the full message history for a conversation",
                "operationId": "getConversation",
                "parameters": [
                    {
                        "name": "conversationId",
                        "in": "path",
                        "description": "Conversation ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "role": {
                                                        "type": "string",
                                                        "enum": [
                                                            "user",
                                                            "assistant",
                                                            "system"
                                                        ]
                                                    },
                                                    "content": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "context": {
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Delete a conversation",
                "description": "Delete a conversation and all its messages",
                "operationId": "deleteConversation",
                "parameters": [
                    {
                        "name": "conversationId",
                        "in": "path",
                        "description": "Conversation ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Conversation deleted successfully"
                    },
                    "404": {
                        "description": "Conversation not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/feedback": {
            "post": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Submit feedback for an AI response",
                "description": "Submit user feedback about an AI agent response",
                "operationId": "submitFeedback",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message_id",
                                    "rating"
                                ],
                                "properties": {
                                    "message_id": {
                                        "type": "string"
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "feedback": {
                                        "type": "string",
                                        "maxLength": 1000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback submitted successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/balances": {
            "get": {
                "tags": [
                    "Account Balances"
                ],
                "summary": "Get account balances",
                "description": "Retrieve all asset balances for a specific account",
                "operationId": "getAccountBalances",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "asset",
                        "in": "query",
                        "description": "Filter by specific asset code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "positive",
                        "in": "query",
                        "description": "Only show positive balances",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "balances": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "asset_code": {
                                                                "type": "string"
                                                            },
                                                            "balance": {
                                                                "type": "integer"
                                                            },
                                                            "formatted": {
                                                                "type": "string"
                                                            },
                                                            "asset": {
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "symbol": {
                                                                        "type": "string"
                                                                    },
                                                                    "precision": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "total_assets": {
                                                            "type": "integer"
                                                        },
                                                        "total_usd_equivalent": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The specified account UUID was not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/balances": {
            "get": {
                "tags": [
                    "Account Balances"
                ],
                "summary": "List all account balances",
                "description": "Get balances across all accounts with filtering and aggregation options",
                "operationId": "listAllBalances",
                "parameters": [
                    {
                        "name": "asset",
                        "in": "query",
                        "description": "Filter by specific asset code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "min_balance",
                        "in": "query",
                        "description": "Minimum balance filter (in smallest unit)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1000
                        }
                    },
                    {
                        "name": "user_uuid",
                        "in": "query",
                        "description": "Filter by account owner",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "account_uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "asset_code": {
                                                        "type": "string"
                                                    },
                                                    "balance": {
                                                        "type": "integer"
                                                    },
                                                    "formatted": {
                                                        "type": "string"
                                                    },
                                                    "account": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "user_uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total_accounts": {
                                                    "type": "integer"
                                                },
                                                "total_balances": {
                                                    "type": "integer"
                                                },
                                                "asset_totals": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "property": null
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "List accounts",
                "description": "Retrieves a list of accounts for the authenticated user",
                "operationId": "listAccounts",
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Create a new account",
                "description": "Creates a new bank account for a user with an optional initial balance",
                "operationId": "createAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid",
                                    "name"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "660e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Savings Account"
                                    },
                                    "initial_balance": {
                                        "description": "Initial balance in cents",
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 10000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account details",
                "description": "Retrieves detailed information about a specific account",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an account",
                "description": "Deletes an account. Account must have zero balance and not be frozen.",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deletion initiated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account deletion initiated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot delete account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/freeze": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Freeze an account",
                "description": "Freezes an account to prevent any transactions",
                "operationId": "freezeAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Suspicious activity detected"
                                    },
                                    "authorized_by": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account frozen successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account frozen successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account already frozen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/unfreeze": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Unfreeze an account",
                "description": "Unfreezes a previously frozen account",
                "operationId": "unfreezeAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Investigation completed"
                                    },
                                    "authorized_by": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account unfrozen successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account unfrozen successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account not frozen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/assets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "List all supported assets",
                "description": "Get a list of all assets supported by the platform, including fiat currencies, cryptocurrencies, and commodities",
                "operationId": "listAssets",
                "parameters": [
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "description": "Include inactive assets in the response (default: false)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by asset type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fiat",
                                "crypto",
                                "commodity"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by code or name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "US Dollar"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "fiat",
                                                            "crypto",
                                                            "commodity"
                                                        ]
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "example": "$"
                                                    },
                                                    "precision": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "is_active": {
                                                        "type": "boolean"
                                                    },
                                                    "metadata": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                },
                                                "types": {
                                                    "properties": {
                                                        "fiat": {
                                                            "type": "integer"
                                                        },
                                                        "crypto": {
                                                            "type": "integer"
                                                        },
                                                        "commodity": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Verify user's email address using verification link",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expiration timestamp",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "URL signature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid or expired verification link"
                    }
                }
            }
        },
        "/api/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend verification email",
                "description": "Resend email verification link to authenticated user",
                "operationId": "resendVerification",
                "responses": {
                    "200": {
                        "description": "Verification link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification link sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user with email and password to receive an access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "description": "Optional device name for token",
                                        "type": "string",
                                        "example": "iPhone 12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "2|VVGVrIVokPBXkWLOi2yK13eHlQwQtQQONX5GCngZ..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided credentials are incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke the current access token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout-all": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout from all devices",
                "description": "Revoke all access tokens for the user",
                "operationId": "logoutAll",
                "responses": {
                    "200": {
                        "description": "Successfully logged out from all devices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out from all devices"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Get a new access token by revoking the current one",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "3|newTokenHere..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get the authenticated user's information",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "description": "Change the authenticated user's password and invalidate all existing tokens",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "new_token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid current password"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset link",
                "description": "Send a password reset link to the user's email address",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token received via email",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account with email and password",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User's password (min 8 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "is_business_customer": {
                                        "description": "Whether the user is a business customer",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|aBcDeFgHiJkLmNoPqRsTuVwXyZ..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/social/{provider}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get OAuth redirect URL",
                "description": "Get the OAuth redirect URL for social login",
                "operationId": "socialRedirect",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider (google, facebook, github)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "github"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OAuth redirect URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "https://accounts.google.com/o/oauth2/auth?..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid provider"
                    }
                }
            }
        },
        "/api/auth/social/{provider}/callback": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle OAuth callback",
                "description": "Process OAuth callback and authenticate user",
                "operationId": "socialCallback",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "github"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "OAuth authorization code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authenticated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid provider or authentication failed"
                    }
                }
            }
        },
        "/api/auth/2fa/enable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Enable two-factor authentication",
                "description": "Enable 2FA for the authenticated user",
                "operationId": "enable2FA",
                "responses": {
                    "200": {
                        "description": "2FA enabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication enabled successfully."
                                        },
                                        "secret": {
                                            "type": "string",
                                            "example": "JBSWY3DPEHPK3PXP"
                                        },
                                        "qr_code": {
                                            "type": "string",
                                            "example": "data:image/png;base64,..."
                                        },
                                        "recovery_codes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/2fa/confirm": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm two-factor authentication",
                "description": "Confirm 2FA setup with verification code",
                "operationId": "confirm2FA",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication confirmed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid verification code"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/2fa/disable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Disable two-factor authentication",
                "description": "Disable 2FA for the authenticated user",
                "operationId": "disable2FA",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "current-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA disabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication disabled successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid password"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/2fa/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify two-factor authentication code",
                "description": "Verify 2FA code during login",
                "operationId": "verify2FA",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "recovery_code": {
                                        "description": "Use recovery code instead of 2FA code",
                                        "type": "string",
                                        "example": "recovery-code"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication verified successfully."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid code"
                    }
                }
            }
        },
        "/api/auth/2fa/recovery-codes": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Regenerate recovery codes",
                "description": "Generate new set of recovery codes",
                "operationId": "regenerateRecoveryCodes",
                "responses": {
                    "200": {
                        "description": "Recovery codes regenerated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recovery codes regenerated successfully."
                                        },
                                        "recovery_codes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/initiate": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Initiate new current account",
                "description": "Creates a new current account fulfillment arrangement following BIAN standards",
                "operationId": "initiateCurrentAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customerReference",
                                    "accountName",
                                    "accountType"
                                ],
                                "properties": {
                                    "customerReference": {
                                        "description": "Customer UUID reference",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "accountName": {
                                        "description": "Account name",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "accountType": {
                                        "description": "Account type",
                                        "type": "string",
                                        "enum": [
                                            "current",
                                            "checking"
                                        ]
                                    },
                                    "initialDeposit": {
                                        "description": "Initial deposit amount in cents",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "currency": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "default": "USD",
                                        "pattern": "^[A-Z]{3}$"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "currentAccountFulfillmentArrangement": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "customerReference": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "accountName": {
                                                    "type": "string"
                                                },
                                                "accountType": {
                                                    "type": "string"
                                                },
                                                "accountStatus": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "accountBalance": {
                                                    "properties": {
                                                        "amount": {
                                                            "type": "integer"
                                                        },
                                                        "currency": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "dateType": {
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "dateTypeName": {
                                                            "type": "string",
                                                            "example": "AccountOpeningDate"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}": {
            "get": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Retrieve current account details",
                "description": "Retrieves the details of a current account fulfillment arrangement",
                "operationId": "retrieveCurrentAccount",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "currentAccountFulfillmentArrangement": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "customerReference": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "accountName": {
                                                    "type": "string"
                                                },
                                                "accountType": {
                                                    "type": "string"
                                                },
                                                "accountStatus": {
                                                    "type": "string"
                                                },
                                                "accountBalance": {
                                                    "properties": {
                                                        "amount": {
                                                            "type": "integer"
                                                        },
                                                        "currency": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "dateType": {
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "dateTypeName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Update current account",
                "description": "Updates the properties of a current account fulfillment arrangement",
                "operationId": "updateCurrentAccount",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "accountName": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "accountStatus": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "dormant",
                                            "closed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "currentAccountFulfillmentArrangement": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "customerReference": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "accountName": {
                                                    "type": "string"
                                                },
                                                "accountType": {
                                                    "type": "string"
                                                },
                                                "accountStatus": {
                                                    "type": "string"
                                                },
                                                "updateResult": {
                                                    "type": "string",
                                                    "example": "successful"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}/control": {
            "put": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Control account status",
                "description": "Controls the status of a current account (freeze, unfreeze, suspend, reactivate)",
                "operationId": "controlCurrentAccount",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "controlAction",
                                    "controlReason"
                                ],
                                "properties": {
                                    "controlAction": {
                                        "type": "string",
                                        "enum": [
                                            "freeze",
                                            "unfreeze",
                                            "suspend",
                                            "reactivate"
                                        ]
                                    },
                                    "controlReason": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Control action executed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "currentAccountFulfillmentControlRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "controlAction": {
                                                    "type": "string"
                                                },
                                                "controlReason": {
                                                    "type": "string"
                                                },
                                                "controlStatus": {
                                                    "type": "string"
                                                },
                                                "controlDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}/payment/execute": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Execute payment/withdrawal",
                "description": "Executes a payment or withdrawal from the current account",
                "operationId": "executePaymentFromAccount",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentAmount",
                                    "paymentType"
                                ],
                                "properties": {
                                    "paymentAmount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "enum": [
                                            "withdrawal",
                                            "payment",
                                            "transfer"
                                        ]
                                    },
                                    "paymentDescription": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment executed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentExecutionRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "executionStatus": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "paymentAmount": {
                                                    "type": "integer"
                                                },
                                                "paymentType": {
                                                    "type": "string"
                                                },
                                                "paymentDescription": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "accountBalance": {
                                                    "type": "integer"
                                                },
                                                "executionDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient funds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentExecutionRecord": {
                                            "properties": {
                                                "executionStatus": {
                                                    "type": "string",
                                                    "example": "rejected"
                                                },
                                                "executionReason": {
                                                    "type": "string",
                                                    "example": "Insufficient funds"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}/deposit/execute": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Execute deposit",
                "description": "Executes a deposit to the current account",
                "operationId": "executeDepositToAccount",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "depositAmount",
                                    "depositType"
                                ],
                                "properties": {
                                    "depositAmount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "depositType": {
                                        "type": "string",
                                        "enum": [
                                            "cash",
                                            "check",
                                            "transfer",
                                            "direct"
                                        ]
                                    },
                                    "depositDescription": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deposit executed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "depositExecutionRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "executionStatus": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "depositAmount": {
                                                    "type": "integer"
                                                },
                                                "depositType": {
                                                    "type": "string"
                                                },
                                                "depositDescription": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "accountBalance": {
                                                    "type": "integer"
                                                },
                                                "executionDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}/account-balance/retrieve": {
            "get": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Retrieve account balance",
                "description": "Retrieves the current balance of the account",
                "operationId": "retrieveAccountBalance",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountBalanceRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "balanceAmount": {
                                                    "type": "integer"
                                                },
                                                "balanceCurrency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "balanceType": {
                                                    "type": "string",
                                                    "example": "available"
                                                },
                                                "balanceDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/current-account/{crReferenceId}/transaction-report/retrieve": {
            "get": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Retrieve transaction report",
                "description": "Retrieves a report of account transactions for a specified period",
                "operationId": "retrieveTransactionReport",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Start date for transaction report",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "End date for transaction report",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "transactionType",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "credit",
                                "debit"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "transactionReportRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "reportPeriod": {
                                                    "properties": {
                                                        "fromDate": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "toDate": {
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "transactionReference": {
                                                                "type": "string"
                                                            },
                                                            "transactionType": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "credit",
                                                                    "debit"
                                                                ]
                                                            },
                                                            "transactionAmount": {
                                                                "type": "integer"
                                                            },
                                                            "transactionDateTime": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "transactionDescription": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "transactionCount": {
                                                    "type": "integer"
                                                },
                                                "reportDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/initiate": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Initiate new payment transaction",
                "description": "Creates a new payment transaction following BIAN Payment Initiation standards",
                "operationId": "initiatePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payerReference",
                                    "payeeReference",
                                    "paymentAmount",
                                    "paymentType"
                                ],
                                "properties": {
                                    "payerReference": {
                                        "description": "Payer account UUID",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "payeeReference": {
                                        "description": "Payee account UUID",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "paymentAmount": {
                                        "description": "Payment amount in cents",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "paymentCurrency": {
                                        "type": "string",
                                        "default": "USD",
                                        "pattern": "^[A-Z]{3}$"
                                    },
                                    "paymentPurpose": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "enum": [
                                            "internal",
                                            "external",
                                            "instant",
                                            "scheduled"
                                        ]
                                    },
                                    "valueDate": {
                                        "description": "For scheduled payments",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentInitiationTransaction": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "paymentStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "completed",
                                                        "scheduled",
                                                        "failed"
                                                    ]
                                                },
                                                "paymentDetails": {
                                                    "properties": {
                                                        "payerReference": {
                                                            "type": "string"
                                                        },
                                                        "payerName": {
                                                            "type": "string"
                                                        },
                                                        "payeeReference": {
                                                            "type": "string"
                                                        },
                                                        "payeeName": {
                                                            "type": "string"
                                                        },
                                                        "paymentAmount": {
                                                            "type": "integer"
                                                        },
                                                        "paymentCurrency": {
                                                            "type": "string"
                                                        },
                                                        "paymentPurpose": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "paymentType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "paymentSchedule": {
                                                    "properties": {
                                                        "initiationDate": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "valueDate": {
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balanceAfterPayment": {
                                                    "properties": {
                                                        "payerBalance": {
                                                            "type": "integer"
                                                        },
                                                        "payeeBalance": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient funds or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentInitiationTransaction": {
                                            "properties": {
                                                "paymentStatus": {
                                                    "type": "string",
                                                    "example": "rejected"
                                                },
                                                "statusReason": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/{crReferenceId}/update": {
            "put": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Update payment transaction",
                "description": "Updates the status of a payment transaction (cancel, suspend, resume)",
                "operationId": "updatePayment",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentStatus",
                                    "statusReason"
                                ],
                                "properties": {
                                    "paymentStatus": {
                                        "type": "string",
                                        "enum": [
                                            "cancelled",
                                            "suspended",
                                            "resumed"
                                        ]
                                    },
                                    "statusReason": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentInitiationTransaction": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "updateAction": {
                                                    "type": "string"
                                                },
                                                "updateReason": {
                                                    "type": "string"
                                                },
                                                "updateStatus": {
                                                    "type": "string",
                                                    "example": "successful"
                                                },
                                                "updateDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment transaction not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/{crReferenceId}/retrieve": {
            "get": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Retrieve payment details",
                "description": "Retrieves the details of a specific payment transaction",
                "operationId": "retrievePayment",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentInitiationTransaction": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "paymentStatus": {
                                                    "type": "string"
                                                },
                                                "paymentDetails": {
                                                    "properties": {
                                                        "payerReference": {
                                                            "type": "string"
                                                        },
                                                        "payeeReference": {
                                                            "type": "string"
                                                        },
                                                        "paymentAmount": {
                                                            "type": "integer"
                                                        },
                                                        "paymentCurrency": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "paymentSchedule": {
                                                    "properties": {
                                                        "initiationDate": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "completionDate": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "paymentReference": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment transaction not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/{crReferenceId}/execute": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Execute payment transaction",
                "description": "Executes a scheduled or pending payment transaction",
                "operationId": "executePayment",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "executionMode"
                                ],
                                "properties": {
                                    "executionMode": {
                                        "type": "string",
                                        "enum": [
                                            "immediate",
                                            "retry",
                                            "force"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment executed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentExecutionRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "executionMode": {
                                                    "type": "string"
                                                },
                                                "executionStatus": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "executionDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment transaction not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/{crReferenceId}/payment-status/request": {
            "post": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Request payment status",
                "description": "Requests the current status of a payment transaction",
                "operationId": "requestPaymentStatus",
                "parameters": [
                    {
                        "name": "crReferenceId",
                        "in": "path",
                        "description": "Control Record Reference ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentStatusRecord": {
                                            "properties": {
                                                "crReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "paymentStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_found",
                                                        "completed"
                                                    ]
                                                },
                                                "statusCheckDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "eventCount": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bian/payment-initiation/{accountReference}/payment-history/retrieve": {
            "get": {
                "tags": [
                    "BIAN"
                ],
                "summary": "Retrieve payment history",
                "description": "Retrieves the payment history for a specific account",
                "operationId": "retrievePaymentHistory",
                "parameters": [
                    {
                        "name": "accountReference",
                        "in": "path",
                        "description": "Account UUID reference",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Start date for payment history",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "End date for payment history",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "paymentDirection",
                        "in": "query",
                        "description": "Filter by payment direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sent",
                                "received",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paymentHistoryRecord": {
                                            "properties": {
                                                "accountReference": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bqReferenceId": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "historyPeriod": {
                                                    "properties": {
                                                        "fromDate": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "toDate": {
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "paymentReference": {
                                                                "type": "string"
                                                            },
                                                            "paymentDirection": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "sent",
                                                                    "received"
                                                                ]
                                                            },
                                                            "payerReference": {
                                                                "type": "string"
                                                            },
                                                            "payeeReference": {
                                                                "type": "string"
                                                            },
                                                            "paymentAmount": {
                                                                "type": "integer"
                                                            },
                                                            "paymentDateTime": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "paymentHash": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "paymentCount": {
                                                    "type": "integer"
                                                },
                                                "retrievalDateTime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/balance": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Get account balance",
                "description": "Retrieves the current balance and turnover information for an account",
                "operationId": "getAccountBalance",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance information retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Balance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/balance/summary": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Get account balance summary",
                "description": "Retrieves detailed balance statistics including 12-month turnover data",
                "operationId": "getAccountBalanceSummary",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance summary retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "current_balance": {
                                                    "type": "integer",
                                                    "example": 50000
                                                },
                                                "frozen": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_debit_12_months": {
                                                            "type": "integer",
                                                            "example": 120000
                                                        },
                                                        "total_credit_12_months": {
                                                            "type": "integer",
                                                            "example": 170000
                                                        },
                                                        "average_monthly_debit": {
                                                            "type": "number",
                                                            "example": 10000
                                                        },
                                                        "average_monthly_credit": {
                                                            "type": "number",
                                                            "example": 14166.67
                                                        },
                                                        "months_analyzed": {
                                                            "type": "integer",
                                                            "example": 12
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "monthly_turnovers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "year": {
                                                                "type": "integer",
                                                                "example": 2024
                                                            },
                                                            "debit": {
                                                                "type": "integer",
                                                                "example": 10000
                                                            },
                                                            "credit": {
                                                                "type": "integer",
                                                                "example": 15000
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bank-alerting/health-check": {
            "post": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Trigger bank health check",
                "description": "Manually trigger a system-wide health check for all custodian banks",
                "operationId": "triggerBankHealthCheck",
                "responses": {
                    "200": {
                        "description": "Health check completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "health_check_completed": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "checked_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "custodians_checked": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "healthy": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "degraded": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "unhealthy": {
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "unknown": {
                                                            "type": "integer",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "custodian_details": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/health-status": {
            "get": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Get current bank health status",
                "description": "Retrieve the current health status of all custodian banks",
                "operationId": "getBankHealthStatus",
                "responses": {
                    "200": {
                        "description": "Health status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "summary": {
                                                    "properties": {
                                                        "healthy": {
                                                            "type": "integer"
                                                        },
                                                        "degraded": {
                                                            "type": "integer"
                                                        },
                                                        "unhealthy": {
                                                            "type": "integer"
                                                        },
                                                        "unknown": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "total_custodians": {
                                                    "type": "integer"
                                                },
                                                "custodians": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "custodian": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "healthy",
                                                                    "degraded",
                                                                    "unhealthy",
                                                                    "unknown"
                                                                ]
                                                            },
                                                            "overall_failure_rate": {
                                                                "type": "number"
                                                            },
                                                            "last_check": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "response_time_ms": {
                                                                "type": "integer"
                                                            },
                                                            "consecutive_failures": {
                                                                "type": "integer"
                                                            },
                                                            "available_since": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "last_failure": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "checked_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/custodian/{custodian}/health": {
            "get": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Get specific custodian health",
                "description": "Retrieve health status for a specific custodian bank",
                "operationId": "getSpecificCustodianHealth",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custodian health retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "custodian": {
                                                    "type": "string"
                                                },
                                                "health": {
                                                    "type": "object"
                                                },
                                                "checked_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custodian not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/custodian/{custodian}/alerts": {
            "get": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Get custodian alert history",
                "description": "Retrieve alert history for a specific custodian",
                "operationId": "getCustodianAlertHistory",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to retrieve (1-90)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7,
                            "maximum": 90,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "custodian": {
                                                    "type": "string"
                                                },
                                                "period_days": {
                                                    "type": "integer"
                                                },
                                                "alert_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "retrieved_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/statistics": {
            "get": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Get alerting statistics",
                "description": "Retrieve overall alerting system statistics",
                "operationId": "getBankAlertingStatistics",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for statistics",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "day",
                            "enum": [
                                "hour",
                                "day",
                                "week",
                                "month"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "statistics": {
                                                    "properties": {
                                                        "period": {
                                                            "type": "string"
                                                        },
                                                        "total_alerts_sent": {
                                                            "type": "integer"
                                                        },
                                                        "alerts_by_severity": {
                                                            "type": "object"
                                                        },
                                                        "alerts_by_custodian": {
                                                            "type": "object"
                                                        },
                                                        "most_common_issues": {
                                                            "type": "object"
                                                        },
                                                        "alert_response_times": {
                                                            "type": "object"
                                                        },
                                                        "false_positive_rate": {
                                                            "type": "number"
                                                        },
                                                        "period_start": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "period_end": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "calculated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/configuration": {
            "get": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Get alert configuration",
                "description": "Retrieve current alerting system configuration",
                "operationId": "getBankAlertConfiguration",
                "responses": {
                    "200": {
                        "description": "Configuration retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "configuration": {
                                                    "properties": {
                                                        "cooldown_minutes": {
                                                            "type": "integer"
                                                        },
                                                        "severity_thresholds": {
                                                            "type": "object"
                                                        },
                                                        "notification_channels": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "alert_recipients": {
                                                            "type": "object"
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "retrieved_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Configure alert settings",
                "description": "Update alerting system configuration",
                "operationId": "configureBankAlerts",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cooldown_minutes": {
                                        "type": "integer",
                                        "maximum": 1440,
                                        "minimum": 1,
                                        "example": 30
                                    },
                                    "severity_thresholds": {
                                        "properties": {
                                            "failure_rate_warning": {
                                                "type": "number",
                                                "maximum": 100,
                                                "minimum": 0
                                            },
                                            "failure_rate_critical": {
                                                "type": "number",
                                                "maximum": 100,
                                                "minimum": 0
                                            },
                                            "response_time_warning": {
                                                "type": "integer",
                                                "minimum": 0
                                            },
                                            "response_time_critical": {
                                                "type": "integer",
                                                "minimum": 0
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "notification_channels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "mail",
                                                "database",
                                                "slack",
                                                "webhook"
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Configuration updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "configuration_updated": {
                                                    "type": "boolean"
                                                },
                                                "new_configuration": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/test": {
            "post": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Send test alert",
                "description": "Test the alerting system by sending a test alert",
                "operationId": "testBankAlert",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "severity"
                                ],
                                "properties": {
                                    "severity": {
                                        "type": "string",
                                        "enum": [
                                            "info",
                                            "warning",
                                            "critical"
                                        ]
                                    },
                                    "custodian": {
                                        "type": "string",
                                        "example": "test_custodian"
                                    },
                                    "message": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Test alert from API"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Test alert sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "test_alert_sent": {
                                                    "type": "boolean"
                                                },
                                                "severity": {
                                                    "type": "string"
                                                },
                                                "custodian": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "sent_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-alerting/alerts/{alertId}/acknowledge": {
            "post": {
                "tags": [
                    "Bank Alerting"
                ],
                "summary": "Acknowledge alert",
                "description": "Mark an alert as acknowledged/resolved",
                "operationId": "acknowledgeBankAlert",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "Alert identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resolution_notes": {
                                        "type": "string",
                                        "maxLength": 1000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Alert acknowledged successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "alert_id": {
                                                    "type": "string"
                                                },
                                                "acknowledged": {
                                                    "type": "boolean"
                                                },
                                                "acknowledged_by": {
                                                    "type": "string"
                                                },
                                                "acknowledged_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "resolution_notes": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations": {
            "get": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Get user bank allocations",
                "description": "Get current user's bank allocation preferences and distribution",
                "operationId": "7f09bf2f0a59c4cb05e0667327992a28",
                "responses": {
                    "200": {
                        "description": "Bank allocations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "allocations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "bank_code": {
                                                                "type": "string",
                                                                "example": "PAYSERA"
                                                            },
                                                            "bank_name": {
                                                                "type": "string",
                                                                "example": "Paysera Bank"
                                                            },
                                                            "allocation_percentage": {
                                                                "type": "number",
                                                                "example": 40
                                                            },
                                                            "is_primary": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "metadata": {
                                                                "properties": {
                                                                    "country": {
                                                                        "type": "string",
                                                                        "example": "Lithuania"
                                                                    },
                                                                    "currency": {
                                                                        "type": "string",
                                                                        "example": "EUR"
                                                                    },
                                                                    "insurance_limit": {
                                                                        "type": "integer",
                                                                        "example": 100000
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "total_percentage": {
                                                            "type": "number",
                                                            "example": 100
                                                        },
                                                        "bank_count": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "primary_bank": {
                                                            "type": "string",
                                                            "example": "PAYSERA"
                                                        },
                                                        "is_diversified": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "total_insurance_coverage": {
                                                            "type": "integer",
                                                            "example": 300000
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Update bank allocations",
                "description": "Update user's bank allocation preferences",
                "operationId": "e93918e4734a1760318359445b6e70ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "allocations"
                                ],
                                "properties": {
                                    "allocations": {
                                        "type": "object",
                                        "example": {
                                            "PAYSERA": 40,
                                            "DEUTSCHE_BANK": 30,
                                            "SANTANDER": 30
                                        }
                                    },
                                    "primary_bank": {
                                        "type": "string",
                                        "example": "PAYSERA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank allocations updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank allocations updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "allocations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "bank_code": {
                                                                "type": "string",
                                                                "example": "PAYSERA"
                                                            },
                                                            "allocation_percentage": {
                                                                "type": "number",
                                                                "example": 40
                                                            },
                                                            "is_primary": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - allocations must sum to 100%"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations/banks": {
            "post": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Add bank to allocation",
                "description": "Add a new bank to user's allocation preferences",
                "operationId": "d416fa793400804341373a14153ec81b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bank_code",
                                    "percentage"
                                ],
                                "properties": {
                                    "bank_code": {
                                        "type": "string",
                                        "example": "REVOLUT"
                                    },
                                    "percentage": {
                                        "type": "number",
                                        "maximum": 100,
                                        "minimum": 0.01,
                                        "example": 15
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bank added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank added to allocation successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bank_code": {
                                                    "type": "string",
                                                    "example": "REVOLUT"
                                                },
                                                "bank_name": {
                                                    "type": "string",
                                                    "example": "Revolut Bank"
                                                },
                                                "allocation_percentage": {
                                                    "type": "number",
                                                    "example": 15
                                                },
                                                "is_primary": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or bank already exists"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations/banks/{bankCode}": {
            "delete": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Remove bank from allocation",
                "description": "Remove a bank from user's allocation preferences",
                "operationId": "7c5865675340447c9aec500aa8438147",
                "parameters": [
                    {
                        "name": "bankCode",
                        "in": "path",
                        "description": "Bank code to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank removed from allocation successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bank_code": {
                                                    "type": "string",
                                                    "example": "REVOLUT"
                                                },
                                                "removed_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot remove primary bank or bank not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations/primary/{bankCode}": {
            "put": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Set primary bank",
                "description": "Set a bank as the primary bank for the user",
                "operationId": "93afd9d4dbf1c8f12b368b9af6b51605",
                "parameters": [
                    {
                        "name": "bankCode",
                        "in": "path",
                        "description": "Bank code to set as primary",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Primary bank updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Primary bank updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bank_code": {
                                                    "type": "string",
                                                    "example": "PAYSERA"
                                                },
                                                "bank_name": {
                                                    "type": "string",
                                                    "example": "Paysera Bank"
                                                },
                                                "is_primary": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bank not found in user's allocation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations/available-banks": {
            "get": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Get available banks",
                "description": "Get list of all available banks for allocation",
                "operationId": "9f74056b37dd0b5cfa42d9a6d33cf170",
                "responses": {
                    "200": {
                        "description": "Available banks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "bank_code": {
                                                        "type": "string",
                                                        "example": "PAYSERA"
                                                    },
                                                    "bank_name": {
                                                        "type": "string",
                                                        "example": "Paysera Bank"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Lithuania"
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "EUR"
                                                    },
                                                    "insurance_limit": {
                                                        "type": "integer",
                                                        "example": 100000
                                                    },
                                                    "supported_features": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bank-allocations/distribution-preview": {
            "post": {
                "tags": [
                    "Bank Allocation"
                ],
                "summary": "Preview fund distribution",
                "description": "Preview how funds would be distributed across banks for a given amount",
                "operationId": "10b4b115c399fe37eb6460468c0ddc28",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "asset_code"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0.01,
                                        "example": 1000
                                    },
                                    "asset_code": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Distribution preview generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "total_amount": {
                                                    "type": "number",
                                                    "example": 1000
                                                },
                                                "asset_code": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "distribution": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "bank_code": {
                                                                "type": "string",
                                                                "example": "PAYSERA"
                                                            },
                                                            "bank_name": {
                                                                "type": "string",
                                                                "example": "Paysera Bank"
                                                            },
                                                            "allocation_percentage": {
                                                                "type": "number",
                                                                "example": 40
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 400
                                                            },
                                                            "is_primary": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "bank_count": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "is_diversified": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "total_insurance_coverage": {
                                                            "type": "integer",
                                                            "example": 300000
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/accounts/{uuid}/baskets/decompose": {
            "post": {
                "tags": [
                    "Basket Operations"
                ],
                "summary": "Decompose basket holdings into component assets",
                "operationId": "decomposeBasket",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "basket_code",
                                    "amount"
                                ],
                                "properties": {
                                    "basket_code": {
                                        "type": "string",
                                        "example": "STABLE_BASKET"
                                    },
                                    "amount": {
                                        "description": "Amount in smallest unit",
                                        "type": "integer",
                                        "example": 10000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Basket decomposed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "basket_code": {
                                            "type": "string"
                                        },
                                        "basket_amount": {
                                            "type": "integer"
                                        },
                                        "components": {
                                            "type": "object"
                                        },
                                        "decomposed_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or insufficient balance"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/accounts/{uuid}/baskets/compose": {
            "post": {
                "tags": [
                    "Basket Operations"
                ],
                "summary": "Compose component assets into a basket",
                "operationId": "composeBasket",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "basket_code",
                                    "amount"
                                ],
                                "properties": {
                                    "basket_code": {
                                        "type": "string",
                                        "example": "STABLE_BASKET"
                                    },
                                    "amount": {
                                        "description": "Amount of basket to create",
                                        "type": "integer",
                                        "example": 10000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Basket composed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "basket_code": {
                                            "type": "string"
                                        },
                                        "basket_amount": {
                                            "type": "integer"
                                        },
                                        "components_used": {
                                            "type": "object"
                                        },
                                        "composed_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or insufficient component balances"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/accounts/{uuid}/baskets": {
            "get": {
                "tags": [
                    "Basket Operations"
                ],
                "summary": "Get basket holdings for an account",
                "operationId": "getAccountBaskets",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account basket holdings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "account_uuid": {
                                            "type": "string"
                                        },
                                        "basket_holdings": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "basket_code": {
                                                        "type": "string"
                                                    },
                                                    "basket_name": {
                                                        "type": "string"
                                                    },
                                                    "balance": {
                                                        "type": "integer"
                                                    },
                                                    "unit_value": {
                                                        "type": "number"
                                                    },
                                                    "total_value": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total_value": {
                                            "type": "number"
                                        },
                                        "currency": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/baskets": {
            "get": {
                "tags": [
                    "Baskets"
                ],
                "summary": "List all basket assets",
                "operationId": "listBaskets",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by basket type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fixed",
                                "dynamic"
                            ]
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of basket assets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BasketAsset"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Create a new basket",
                "operationId": "createBasket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "components"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "STABLE_BASKET"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Stable Currency Basket"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "fixed",
                                        "enum": [
                                            "fixed",
                                            "dynamic"
                                        ]
                                    },
                                    "rebalance_frequency": {
                                        "type": "string",
                                        "default": "never",
                                        "enum": [
                                            "daily",
                                            "weekly",
                                            "monthly",
                                            "quarterly",
                                            "never"
                                        ]
                                    },
                                    "components": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "asset_code",
                                                "weight"
                                            ],
                                            "properties": {
                                                "asset_code": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 40
                                                },
                                                "min_weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 35
                                                },
                                                "max_weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Basket created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BasketAsset"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/baskets/{code}": {
            "get": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Get basket details",
                "operationId": "getBasket",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Basket details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BasketAsset"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Basket not found"
                    }
                }
            }
        },
        "/api/v2/baskets/{code}/value": {
            "get": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Get current basket value",
                "operationId": "getBasketValue",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current basket value",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "basket_code": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "calculated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "component_values": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/baskets/{code}/rebalance": {
            "post": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Trigger basket rebalancing",
                "operationId": "rebalanceBasket",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "simulate",
                        "in": "query",
                        "description": "Simulate rebalancing without executing",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rebalancing result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "basket": {
                                            "type": "string"
                                        },
                                        "adjustments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/baskets/{code}/history": {
            "get": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Get basket value history",
                "operationId": "getBasketHistory",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days of history",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Basket value history"
                    }
                }
            }
        },
        "/api/v2/baskets/{code}/performance": {
            "get": {
                "tags": [
                    "Baskets"
                ],
                "summary": "Get basket performance metrics",
                "operationId": "getBasketPerformanceMetrics",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Performance period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "30d",
                            "enum": [
                                "1d",
                                "7d",
                                "30d",
                                "90d",
                                "1y"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Basket performance metrics"
                    }
                }
            }
        },
        "/api/baskets/{code}/performance": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get performance metrics for a basket",
                "operationId": "getBasketPerformance",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Performance period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month",
                            "enum": [
                                "hour",
                                "day",
                                "week",
                                "month",
                                "quarter",
                                "year",
                                "all_time"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Performance data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "basket_code": {
                                                    "type": "string"
                                                },
                                                "period_type": {
                                                    "type": "string"
                                                },
                                                "return_percentage": {
                                                    "type": "number"
                                                },
                                                "volatility": {
                                                    "type": "number"
                                                },
                                                "sharpe_ratio": {
                                                    "type": "number"
                                                },
                                                "max_drawdown": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/history": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get historical performance data for a basket",
                "operationId": "getBasketPerformanceHistory",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "period_type",
                        "in": "query",
                        "description": "Filter by period type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hour",
                                "day",
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical performance data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BasketPerformance"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/summary": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get performance summary across multiple periods",
                "operationId": "getBasketPerformanceSummary",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Performance summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "basket_code": {
                                                    "type": "string"
                                                },
                                                "basket_name": {
                                                    "type": "string"
                                                },
                                                "current_value": {
                                                    "type": "number"
                                                },
                                                "performances": {
                                                    "properties": {
                                                        "day": {
                                                            "type": "object"
                                                        },
                                                        "week": {
                                                            "type": "object"
                                                        },
                                                        "month": {
                                                            "type": "object"
                                                        },
                                                        "year": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/components": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get component-level performance breakdown",
                "operationId": "getBasketComponentPerformance",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Performance period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month",
                            "enum": [
                                "hour",
                                "day",
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Component performance data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ComponentPerformance"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/top-performers": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get top performing components",
                "operationId": "getBasketTopPerformers",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Performance period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of components to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top performing components"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/worst-performers": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Get worst performing components",
                "operationId": "getBasketWorstPerformers",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Performance period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of components to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worst performing components"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/calculate": {
            "post": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Trigger performance calculation for a basket",
                "operationId": "calculateBasketPerformance",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "period": {
                                        "type": "string",
                                        "enum": [
                                            "all",
                                            "hour",
                                            "day",
                                            "week",
                                            "month",
                                            "quarter",
                                            "year"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Calculation triggered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "calculated_periods": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/baskets/{code}/performance/compare": {
            "get": {
                "tags": [
                    "Basket Performance"
                ],
                "summary": "Compare basket performance against benchmarks",
                "operationId": "compareBasketPerformance",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Basket asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "GCU"
                        }
                    },
                    {
                        "name": "benchmarks",
                        "in": "query",
                        "description": "Comma-separated list of benchmark basket codes",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "USD_STABLE,EUR_STABLE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Performance comparison data"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/batch-operations/execute": {
            "post": {
                "tags": [
                    "Batch Processing"
                ],
                "summary": "Execute batch operations",
                "description": "Execute end-of-day batch processing operations with compensation support",
                "operationId": "ce4b5fc9c19748de39663efc9591ccf2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "operations"
                                ],
                                "properties": {
                                    "operations": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "account_interest",
                                                        "fee_collection",
                                                        "balance_reconciliation",
                                                        "report_generation"
                                                    ],
                                                    "example": "account_interest"
                                                },
                                                "parameters": {
                                                    "type": "object",
                                                    "example": {
                                                        "rate": 0.05,
                                                        "date": "2023-12-31"
                                                    }
                                                },
                                                "priority": {
                                                    "type": "integer",
                                                    "maximum": 10,
                                                    "minimum": 1,
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "batch_name": {
                                        "type": "string",
                                        "example": "EOD_2023_12_31"
                                    },
                                    "schedule_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "retry_attempts": {
                                        "type": "integer",
                                        "default": 3,
                                        "maximum": 5,
                                        "minimum": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Batch processing initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Batch processing initiated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "batch_id": {
                                                    "type": "string",
                                                    "example": "batch_550e8400_e29b_41d4"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "initiated"
                                                },
                                                "operations_count": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "estimated_duration": {
                                                    "type": "string",
                                                    "example": "15-30 minutes"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "started_by": {
                                                    "type": "string",
                                                    "example": "admin@finaegis.org"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid batch operation request"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch-operations/{batchId}/status": {
            "get": {
                "tags": [
                    "Batch Processing"
                ],
                "summary": "Get batch operation status",
                "description": "Get the current status and progress of a batch operation",
                "operationId": "a6bb9a2725777f338f91c9c3acda4f15",
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Batch ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "batch_id": {
                                                    "type": "string",
                                                    "example": "batch_550e8400_e29b_41d4"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "initiated",
                                                        "running",
                                                        "completed",
                                                        "failed",
                                                        "compensating"
                                                    ],
                                                    "example": "running"
                                                },
                                                "progress": {
                                                    "type": "integer",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "example": 65
                                                },
                                                "operations_total": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "operations_completed": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "operations_failed": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "current_operation": {
                                                    "type": "string",
                                                    "example": "balance_reconciliation"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "estimated_completion": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "error_message": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "operations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "account_interest"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "started_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "completed_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "records_processed": {
                                                                "type": "integer",
                                                                "example": 1250
                                                            },
                                                            "error_message": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Batch operation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch-operations": {
            "get": {
                "tags": [
                    "Batch Processing"
                ],
                "summary": "Get batch operations history",
                "description": "Get list of recent batch operations with filtering options",
                "operationId": "b5717821f529c8ecfd2dba3f8dc35906",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "initiated",
                                "running",
                                "completed",
                                "failed",
                                "scheduled"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch operations history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "batch_id": {
                                                        "type": "string",
                                                        "example": "batch_550e8400_e29b_41d4"
                                                    },
                                                    "batch_name": {
                                                        "type": "string",
                                                        "example": "EOD_2023_12_31"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "operations_count": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "started_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "completed_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "duration_minutes": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "started_by": {
                                                        "type": "string",
                                                        "example": "admin@finaegis.org"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 87
                                                },
                                                "limit": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "offset": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch-operations/{batchId}/cancel": {
            "post": {
                "tags": [
                    "Batch Processing"
                ],
                "summary": "Cancel batch operation",
                "description": "Cancel a running or scheduled batch operation with compensation",
                "operationId": "5bdfee16fc012e06ac04d5899b41a4e5",
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Batch ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "example": "Emergency maintenance required"
                                    },
                                    "compensate": {
                                        "description": "Whether to run compensation for completed operations",
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch operation cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Batch operation cancelled successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "batch_id": {
                                                    "type": "string",
                                                    "example": "batch_550e8400_e29b_41d4"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "cancelled"
                                                },
                                                "cancelled_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "cancelled_by": {
                                                    "type": "string",
                                                    "example": "admin@finaegis.org"
                                                },
                                                "compensation_required": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/custodians": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "List all available custodians",
                "description": "Returns a list of all registered custodian banks and their current status",
                "operationId": "listCustodians",
                "responses": {
                    "200": {
                        "description": "List of custodians",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "paysera"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "Paysera Bank"
                                                    },
                                                    "available": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "supported_assets": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "EUR"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "default": {
                                            "type": "string",
                                            "example": "paysera",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/custodians/{custodian}/account-info": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Get custodian account information",
                "description": "Retrieves detailed account information from the specified custodian",
                "operationId": "getCustodianAccountInfo",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Custodian account identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACC123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_id": {
                                                    "type": "string",
                                                    "example": "ACC123456"
                                                },
                                                "account_name": {
                                                    "type": "string",
                                                    "example": "EUR Current Account"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or custodian error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/custodians/{custodian}/balance": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Get account balance from custodian",
                "description": "Retrieves the current balance for a specific asset in a custodian account",
                "operationId": "getCustodianBalance",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Custodian account identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACC123456"
                        }
                    },
                    {
                        "name": "asset_code",
                        "in": "query",
                        "description": "Asset code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_id": {
                                                    "type": "string",
                                                    "example": "ACC123456"
                                                },
                                                "asset_code": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "balance": {
                                                    "description": "Balance in cents",
                                                    "type": "integer",
                                                    "example": 150000
                                                },
                                                "formatted_balance": {
                                                    "type": "string",
                                                    "example": "1,500.00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or custodian error"
                    }
                }
            }
        },
        "/api/custodians/{custodian}/transfer": {
            "post": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Transfer funds to/from custodian",
                "description": "Initiates a transfer between an internal account and a custodian account",
                "operationId": "custodianTransfer",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "internal_account_uuid",
                                    "custodian_account_id",
                                    "asset_code",
                                    "amount",
                                    "direction"
                                ],
                                "properties": {
                                    "internal_account_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "custodian_account_id": {
                                        "type": "string",
                                        "example": "ACC123456"
                                    },
                                    "asset_code": {
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "deposit",
                                            "withdraw"
                                        ],
                                        "example": "deposit"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "Invoice payment",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "transaction_id": {
                                                    "type": "string",
                                                    "example": "tx-123456"
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "example": "deposit"
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 10050
                                                },
                                                "asset_code": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer deposit initiated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or transfer failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/custodians/{custodian}/transactions": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Get transaction history from custodian",
                "description": "Retrieves transaction history for a custodian account with pagination",
                "operationId": "getCustodianTransactionHistory",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Custodian account identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACC123456"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of transactions to return (1-1000)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "maximum": 1000,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of transactions to skip",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "tx-123456"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-15T10:30:00Z"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Wire transfer"
                                                    },
                                                    "amount": {
                                                        "type": "integer",
                                                        "example": 10000
                                                    },
                                                    "balance": {
                                                        "type": "integer",
                                                        "example": 150000
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "credit"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "limit": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "offset": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or custodian error"
                    }
                }
            }
        },
        "/api/custodians/{custodian}/transactions/{transactionId}": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Get transaction status",
                "description": "Retrieves the current status of a specific transaction from the custodian",
                "operationId": "getCustodianTransactionStatus",
                "parameters": [
                    {
                        "name": "custodian",
                        "in": "path",
                        "description": "Custodian identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "paysera"
                        }
                    },
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "Transaction identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tx-123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "type": "string",
                                                    "example": "tx-123456"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 10000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or transaction not found"
                    }
                }
            }
        },
        "/api/webhooks/custodian/paysera": {
            "post": {
                "tags": [
                    "Custodian Webhooks"
                ],
                "summary": "Receive Paysera webhook",
                "description": "Endpoint for receiving webhook notifications from Paysera bank",
                "operationId": "payseraWebhook",
                "requestBody": {
                    "description": "Webhook payload from Paysera",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event": {
                                        "type": "string",
                                        "example": "transaction.completed"
                                    },
                                    "event_id": {
                                        "type": "string",
                                        "example": "evt_123456"
                                    },
                                    "data": {
                                        "description": "Event-specific data",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Webhook accepted for processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "accepted"
                                        },
                                        "duplicate": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid signature",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid signature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payload"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/webhooks/custodian/santander": {
            "post": {
                "tags": [
                    "Custodian Webhooks"
                ],
                "summary": "Receive Santander webhook",
                "description": "Endpoint for receiving webhook notifications from Santander bank",
                "operationId": "santanderWebhook",
                "requestBody": {
                    "description": "Webhook payload from Santander",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_type": {
                                        "type": "string",
                                        "example": "payment.received"
                                    },
                                    "id": {
                                        "type": "string",
                                        "example": "wh_987654"
                                    },
                                    "payload": {
                                        "description": "Event-specific payload",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Webhook accepted for processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid signature"
                    },
                    "400": {
                        "description": "Invalid payload"
                    }
                }
            }
        },
        "/api/webhooks/custodian/mock": {
            "post": {
                "tags": [
                    "Custodian Webhooks"
                ],
                "summary": "Receive Mock Bank webhook",
                "description": "Endpoint for receiving webhook notifications from Mock Bank (for testing)",
                "operationId": "mockBankWebhook",
                "requestBody": {
                    "description": "Webhook payload from Mock Bank",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "balance.updated"
                                    },
                                    "id": {
                                        "type": "string",
                                        "example": "mock_123"
                                    },
                                    "data": {
                                        "properties": {
                                            "account_id": {
                                                "type": "string",
                                                "example": "ACC123"
                                            },
                                            "balance": {
                                                "type": "integer",
                                                "example": 150000
                                            },
                                            "currency": {
                                                "type": "string",
                                                "example": "EUR"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Webhook accepted for processing"
                    },
                    "401": {
                        "description": "Invalid signature"
                    },
                    "400": {
                        "description": "Invalid payload"
                    }
                }
            }
        },
        "/api/reconciliation/trigger": {
            "post": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Trigger manual reconciliation process",
                "description": "Manually triggers the daily bank account reconciliation process (Admin only)",
                "operationId": "triggerReconciliation",
                "responses": {
                    "200": {
                        "description": "Reconciliation completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "reconciliation_triggered": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "triggered_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-15T10:30:00Z"
                                                },
                                                "report": {
                                                    "description": "Reconciliation report details",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Daily reconciliation completed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Reconciliation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Reconciliation failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Connection to custodian failed"
                                        },
                                        "triggered_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reconciliation/latest": {
            "get": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Get the latest reconciliation report",
                "description": "Retrieves the most recent reconciliation report (Admin only)",
                "operationId": "getLatestReconciliationReport",
                "responses": {
                    "200": {
                        "description": "Latest report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "report": {
                                                    "description": "Full reconciliation report details",
                                                    "type": "object"
                                                },
                                                "retrieved_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No reconciliation reports found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No reconciliation reports found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reconciliation/history": {
            "get": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Get reconciliation history",
                "description": "Retrieves historical reconciliation reports with filtering options (Admin only)",
                "operationId": "getReconciliationHistory",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to look back (1-90, default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "maximum": 90,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of reports to return (1-50, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "reports": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2024-01-15"
                                                            },
                                                            "summary": {
                                                                "type": "object"
                                                            },
                                                            "discrepancy_count": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "recommendations_count": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "file_path": {
                                                                "type": "string",
                                                                "example": "reconciliation-2024-01-15.json"
                                                            },
                                                            "file_size": {
                                                                "type": "integer",
                                                                "example": 15248
                                                            },
                                                            "generated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "period_days": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "retrieved_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve history"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reconciliation/report/{date}": {
            "get": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Get reconciliation report for specific date",
                "description": "Retrieves the reconciliation report for a specific date (Admin only)",
                "operationId": "getReconciliationReportByDate",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date in YYYY-MM-DD format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "report": {
                                                    "description": "Full reconciliation report",
                                                    "type": "object"
                                                },
                                                "file_info": {
                                                    "properties": {
                                                        "size": {
                                                            "type": "integer"
                                                        },
                                                        "modified_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "retrieved_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid date format. Use YYYY-MM-DD format."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reconciliation/metrics": {
            "get": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Get reconciliation metrics and analytics",
                "description": "Retrieves summary metrics and analytics for reconciliation processes (Admin only)",
                "operationId": "getReconciliationMetrics",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to analyze (1-90, default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "maximum": 90,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "properties": {
                                                        "total_reconciliations": {
                                                            "type": "integer"
                                                        },
                                                        "successful_reconciliations": {
                                                            "type": "integer"
                                                        },
                                                        "failed_reconciliations": {
                                                            "type": "integer"
                                                        },
                                                        "total_discrepancies": {
                                                            "type": "integer"
                                                        },
                                                        "total_discrepancy_amount": {
                                                            "type": "number"
                                                        },
                                                        "average_duration_minutes": {
                                                            "type": "number"
                                                        },
                                                        "accounts_checked_total": {
                                                            "type": "integer"
                                                        },
                                                        "average_discrepancies_per_run": {
                                                            "type": "number"
                                                        },
                                                        "success_rate": {
                                                            "type": "number"
                                                        },
                                                        "discrepancy_types": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "daily_trends": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "date": {
                                                                        "type": "string",
                                                                        "format": "date"
                                                                    },
                                                                    "discrepancies": {
                                                                        "type": "integer"
                                                                    },
                                                                    "accounts_checked": {
                                                                        "type": "integer"
                                                                    },
                                                                    "duration_minutes": {
                                                                        "type": "number"
                                                                    },
                                                                    "status": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "period_days": {
                                                    "type": "integer"
                                                },
                                                "period_start": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "period_end": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "calculated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to calculate metrics"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reconciliation/status": {
            "get": {
                "tags": [
                    "Daily Reconciliation"
                ],
                "summary": "Get current reconciliation process status",
                "description": "Checks if reconciliation process is currently running and provides status information (Admin only)",
                "operationId": "getReconciliationStatus",
                "responses": {
                    "200": {
                        "description": "Status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "is_running": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "last_run_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "nullable": true
                                                },
                                                "next_scheduled_run": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "status_checked_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "running_duration_minutes": {
                                                    "type": "number",
                                                    "nullable": true
                                                },
                                                "last_run_summary": {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "accounts_checked": {
                                                            "type": "integer"
                                                        },
                                                        "discrepancies_found": {
                                                            "type": "integer"
                                                        },
                                                        "duration_minutes": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get status"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/exchange/orders": {
            "get": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Get user's orders",
                "operationId": "5c46c399a7b468f216ac7817493acaab",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "filled",
                                "cancelled",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "base_currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quote_currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Place a new order",
                "operationId": "12d11d4f8e4b46d17125e5f34fe57b66",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "order_type",
                                    "base_currency",
                                    "quote_currency",
                                    "amount"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "buy",
                                            "sell"
                                        ]
                                    },
                                    "order_type": {
                                        "type": "string",
                                        "enum": [
                                            "market",
                                            "limit"
                                        ]
                                    },
                                    "base_currency": {
                                        "type": "string",
                                        "example": "BTC"
                                    },
                                    "quote_currency": {
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "amount": {
                                        "type": "string",
                                        "example": "0.01"
                                    },
                                    "price": {
                                        "description": "Required for limit orders",
                                        "type": "string",
                                        "example": "50000"
                                    },
                                    "stop_price": {
                                        "description": "For stop orders",
                                        "type": "string",
                                        "example": "49000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order placed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/exchange/orders/{orderId}": {
            "delete": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Cancel an order",
                "operationId": "fd98e5dbccffc90f7421f618c8d6b49c",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/exchange/trades": {
            "get": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Get user's trade history",
                "operationId": "2bf1f6a21e38ef48b3272f925f6c4dee",
                "parameters": [
                    {
                        "name": "base_currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quote_currency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trades"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/exchange/orderbook/{baseCurrency}/{quoteCurrency}": {
            "get": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Get order book for a trading pair",
                "operationId": "6d27fc2973fdd320cacce11135c67262",
                "parameters": [
                    {
                        "name": "baseCurrency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quoteCurrency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order book data"
                    }
                }
            }
        },
        "/api/exchange/markets": {
            "get": {
                "tags": [
                    "Exchange"
                ],
                "summary": "Get market data for all trading pairs",
                "operationId": "5e52bf63518a4ea5d3941b37ceecbc46",
                "responses": {
                    "200": {
                        "description": "Market data for all pairs"
                    }
                }
            }
        },
        "/api/exchange-rates/{from}/{to}": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get current exchange rate",
                "description": "Retrieve the current exchange rate between two assets",
                "operationId": "getExchangeRate",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "The source asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "The target asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "from_asset": {
                                                    "type": "string"
                                                },
                                                "to_asset": {
                                                    "type": "string"
                                                },
                                                "rate": {
                                                    "type": "string"
                                                },
                                                "inverse_rate": {
                                                    "type": "string"
                                                },
                                                "source": {
                                                    "type": "string"
                                                },
                                                "valid_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "age_minutes": {
                                                    "type": "integer"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exchange rate not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/exchange-rates/{from}/{to}/convert": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Convert amount between assets",
                "description": "Convert an amount from one asset to another using current exchange rates",
                "operationId": "convertCurrency",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "The source asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "The target asset code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "The amount to convert (in smallest unit)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "from_asset": {
                                                    "type": "string"
                                                },
                                                "to_asset": {
                                                    "type": "string"
                                                },
                                                "from_amount": {
                                                    "type": "integer"
                                                },
                                                "to_amount": {
                                                    "type": "integer"
                                                },
                                                "from_formatted": {
                                                    "type": "string"
                                                },
                                                "to_formatted": {
                                                    "type": "string"
                                                },
                                                "rate": {
                                                    "type": "string"
                                                },
                                                "rate_age_minutes": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversion not available"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/exchange-rates": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "List exchange rates",
                "description": "Get a list of available exchange rates with filtering options",
                "operationId": "listExchangeRates",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Filter by source asset code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Filter by target asset code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Filter by rate source",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "manual",
                                "api",
                                "oracle",
                                "market"
                            ]
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "valid",
                        "in": "query",
                        "description": "Filter by validity (not expired)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "from_asset": {
                                                        "type": "string"
                                                    },
                                                    "to_asset": {
                                                        "type": "string"
                                                    },
                                                    "rate": {
                                                        "type": "string"
                                                    },
                                                    "inverse_rate": {
                                                        "type": "string"
                                                    },
                                                    "source": {
                                                        "type": "string"
                                                    },
                                                    "valid_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "expires_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean"
                                                    },
                                                    "age_minutes": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "valid": {
                                                    "type": "integer"
                                                },
                                                "stale": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/exchange-rates/providers": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "List all available exchange rate providers",
                "description": "Returns a list of all registered exchange rate providers with their capabilities and status",
                "operationId": "listExchangeRateProviders",
                "responses": {
                    "200": {
                        "description": "List of providers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ecb"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "European Central Bank"
                                                    },
                                                    "available": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "priority": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "capabilities": {
                                                        "properties": {
                                                            "supports_historical": {
                                                                "type": "boolean"
                                                            },
                                                            "supports_realtime": {
                                                                "type": "boolean"
                                                            },
                                                            "supports_crypto": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "supported_currencies": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "EUR"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "default": {
                                            "type": "string",
                                            "example": "ecb",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/exchange-rates/providers/{provider}/rate": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get exchange rate from specific provider",
                "description": "Retrieves the current exchange rate for a currency pair from the specified provider",
                "operationId": "getProviderExchangeRate",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Provider identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ecb"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Source currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Target currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "USD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rate retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "from_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "to_currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.0825
                                                },
                                                "bid": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.082
                                                },
                                                "ask": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.083
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "ecb"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Provider is not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Provider is not available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/exchange-rates/compare": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Compare rates from all providers",
                "description": "Retrieves and compares exchange rates for a currency pair from all available providers",
                "operationId": "compareExchangeRates",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Source currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Target currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "USD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rate comparison retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Comparison data with provider rates",
                                            "type": "object"
                                        },
                                        "pair": {
                                            "type": "string",
                                            "example": "EUR/USD"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/api/exchange-rates/aggregated": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get aggregated rate from multiple providers",
                "description": "Calculates an aggregated exchange rate using data from multiple providers",
                "operationId": "getAggregatedExchangeRate",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Source currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Target currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "USD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated rate retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "from_currency": {
                                                    "type": "string"
                                                },
                                                "to_currency": {
                                                    "type": "string"
                                                },
                                                "rate": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "bid": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "ask": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "aggregated"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/api/exchange-rates/refresh": {
            "post": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Refresh exchange rates",
                "description": "Manually triggers a refresh of exchange rates for specified currency pairs or all active pairs",
                "operationId": "refreshExchangeRates",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pairs": {
                                        "description": "Optional array of currency pairs to refresh",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[A-Z]{3}/[A-Z]{3}$",
                                            "example": "EUR/USD"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rates refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange rates refreshed"
                                        },
                                        "data": {
                                            "properties": {
                                                "refreshed": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "EUR/USD"
                                                    }
                                                },
                                                "failed": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "pair": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/api/exchange-rates/historical": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get historical exchange rates",
                "description": "Retrieves historical exchange rates for a currency pair within a specified date range",
                "operationId": "getHistoricalExchangeRates",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Source currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Target currency code (3 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z]{3}$",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for historical data",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for historical data (must be after or equal to start_date)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical rates retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Array of historical rate data",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pair": {
                                            "type": "string",
                                            "example": "EUR/USD"
                                        },
                                        "period": {
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/api/exchange-rates/validate": {
            "post": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Validate an exchange rate",
                "description": "Validates a given exchange rate against current market rates and configured thresholds",
                "operationId": "validateExchangeRate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from",
                                    "to",
                                    "rate"
                                ],
                                "properties": {
                                    "from": {
                                        "description": "Source currency code",
                                        "type": "string",
                                        "pattern": "^[A-Z]{3}$",
                                        "example": "EUR"
                                    },
                                    "to": {
                                        "description": "Target currency code",
                                        "type": "string",
                                        "pattern": "^[A-Z]{3}$",
                                        "example": "USD"
                                    },
                                    "rate": {
                                        "description": "Exchange rate to validate",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 1.0825
                                    },
                                    "provider": {
                                        "description": "Optional provider name",
                                        "type": "string",
                                        "example": "manual"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "is_valid": {
                                                    "type": "boolean"
                                                },
                                                "deviation_percentage": {
                                                    "type": "number"
                                                },
                                                "market_rate": {
                                                    "type": "number"
                                                },
                                                "validation_messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/api/external-exchange/connectors": {
            "get": {
                "tags": [
                    "External Exchange"
                ],
                "summary": "Get available external exchange connectors",
                "operationId": "353e5dc50ff741b7e4e0baad991d8d48",
                "responses": {
                    "200": {
                        "description": "List of available connectors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "connectors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "binance"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "Binance"
                                                    },
                                                    "available": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/external-exchange/ticker/{base}/{quote}": {
            "get": {
                "tags": [
                    "External Exchange"
                ],
                "summary": "Get aggregated ticker data from external exchanges",
                "operationId": "88647ac7ac6f2813b232e942834919c2",
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "BTC"
                        }
                    },
                    {
                        "name": "quote",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated ticker data"
                    }
                }
            }
        },
        "/api/external-exchange/orderbook/{base}/{quote}": {
            "get": {
                "tags": [
                    "External Exchange"
                ],
                "summary": "Get aggregated order book from external exchanges",
                "operationId": "1326d00c8161ed42b95ae1b8b68e0182",
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "BTC"
                        }
                    },
                    {
                        "name": "quote",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated order book"
                    }
                }
            }
        },
        "/api/external-exchange/arbitrage/{base}/{quote}": {
            "get": {
                "tags": [
                    "External Exchange"
                ],
                "summary": "Check arbitrage opportunities",
                "operationId": "d2067e49f0c4fee7b8faef8a224e61dd",
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "BTC"
                        }
                    },
                    {
                        "name": "quote",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arbitrage opportunities"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/gdpr/consent-status": {
            "get": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Get user's consent status",
                "description": "Retrieve the current consent status for various data processing activities",
                "operationId": "getGdprConsentStatus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "consents": {
                                            "properties": {
                                                "privacy_policy": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "terms": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "marketing": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "data_retention": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "dates": {
                                            "properties": {
                                                "privacy_policy_accepted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "terms_accepted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "marketing_consent_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gdpr/consent": {
            "post": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Update user's consent preferences",
                "description": "Update consent preferences for various data processing activities",
                "operationId": "updateGdprConsent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "privacy_policy": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "terms": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "marketing": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "data_retention": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consent updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Consent preferences updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gdpr/export": {
            "post": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Request data export (GDPR Article 20)",
                "description": "Request a complete export of all personal data in a machine-readable format",
                "operationId": "requestGdprDataExport",
                "responses": {
                    "200": {
                        "description": "Export request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data export requested. You will receive an email with your data shortly."
                                        },
                                        "preview": {
                                            "properties": {
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "personal_info",
                                                        "accounts",
                                                        "transactions",
                                                        "documents"
                                                    ]
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to process data export request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gdpr/delete": {
            "post": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Request account deletion (GDPR Article 17)",
                "description": "Request complete deletion of account and personal data (right to be forgotten)",
                "operationId": "requestGdprAccountDeletion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "confirm"
                                ],
                                "properties": {
                                    "confirm": {
                                        "description": "Confirmation of deletion request",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "No longer using the service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deletion request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account deletion request processed. Your account will be deleted within 30 days."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Deletion not allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Account cannot be deleted at this time"
                                        },
                                        "reasons": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Outstanding balance",
                                                "Active loans"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gdpr/retention-policy": {
            "get": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Get data retention policy",
                "description": "Retrieve information about data retention periods and user rights under GDPR",
                "operationId": "getGdprRetentionPolicy",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "policy": {
                                            "properties": {
                                                "transaction_data": {
                                                    "type": "string",
                                                    "example": "7 years (regulatory requirement)"
                                                },
                                                "kyc_documents": {
                                                    "type": "string",
                                                    "example": "5 years after account closure"
                                                },
                                                "audit_logs": {
                                                    "type": "string",
                                                    "example": "3 years"
                                                },
                                                "marketing_data": {
                                                    "type": "string",
                                                    "example": "Until consent withdrawn"
                                                },
                                                "inactive_accounts": {
                                                    "type": "string",
                                                    "example": "Deleted after 2 years of inactivity"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "user_rights": {
                                            "properties": {
                                                "access": {
                                                    "type": "string",
                                                    "example": "You can request a copy of your data at any time"
                                                },
                                                "rectification": {
                                                    "type": "string",
                                                    "example": "You can update your personal information"
                                                },
                                                "erasure": {
                                                    "type": "string",
                                                    "example": "You can request deletion (subject to legal requirements)"
                                                },
                                                "portability": {
                                                    "type": "string",
                                                    "example": "You can export your data in machine-readable format"
                                                },
                                                "object": {
                                                    "type": "string",
                                                    "example": "You can object to certain processing activities"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/kyc/status": {
            "get": {
                "tags": [
                    "KYC"
                ],
                "summary": "Get KYC status for authenticated user",
                "description": "Retrieve the current KYC verification status and documents for the authenticated user",
                "operationId": "getKycStatus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "unverified",
                                                "pending",
                                                "approved",
                                                "rejected"
                                            ],
                                            "example": "pending"
                                        },
                                        "level": {
                                            "type": "string",
                                            "enum": [
                                                "basic",
                                                "enhanced",
                                                "full"
                                            ],
                                            "example": "enhanced"
                                        },
                                        "submitted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-01-15T10:00:00Z"
                                        },
                                        "approved_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        },
                                        "needs_kyc": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "123"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "passport"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "approved"
                                                    },
                                                    "uploaded_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/kyc/requirements": {
            "get": {
                "tags": [
                    "KYC"
                ],
                "summary": "Get KYC requirements for a level",
                "description": "Retrieve the document requirements for a specific KYC verification level",
                "operationId": "getKycRequirements",
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "KYC verification level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "basic",
                                "enhanced",
                                "full"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "level": {
                                            "type": "string",
                                            "example": "enhanced"
                                        },
                                        "requirements": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "document_type": {
                                                        "type": "string",
                                                        "example": "passport"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Valid passport copy"
                                                    },
                                                    "required": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/kyc/submit": {
            "post": {
                "tags": [
                    "KYC"
                ],
                "summary": "Submit KYC documents",
                "description": "Submit KYC verification documents for review",
                "operationId": "submitKycDocuments",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "passport",
                                                        "national_id",
                                                        "drivers_license",
                                                        "residence_permit",
                                                        "utility_bill",
                                                        "bank_statement",
                                                        "selfie",
                                                        "proof_of_income",
                                                        "other"
                                                    ]
                                                },
                                                "file": {
                                                    "description": "Document file (jpg, jpeg, png, pdf - max 10MB)",
                                                    "type": "string",
                                                    "format": "binary"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "KYC documents submitted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - KYC already approved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "KYC already approved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to submit KYC documents"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/kyc/documents/{documentId}/download": {
            "get": {
                "tags": [
                    "KYC"
                ],
                "summary": "Download a KYC document",
                "description": "Download a previously uploaded KYC document. Users can only download their own documents.",
                "operationId": "downloadKycDocument",
                "parameters": [
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The document ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document file download",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/liquidity/pools": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Get all active liquidity pools",
                "operationId": "cf91af4d0abbb407bfaf067aab2c2ae0",
                "responses": {
                    "200": {
                        "description": "List of active pools",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pools": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "pool_id": {
                                                        "type": "string"
                                                    },
                                                    "base_currency": {
                                                        "type": "string"
                                                    },
                                                    "quote_currency": {
                                                        "type": "string"
                                                    },
                                                    "tvl": {
                                                        "type": "string"
                                                    },
                                                    "apy": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Create a new liquidity pool",
                "operationId": "7a48cd68e4ddb1583b8c578fe3f75804",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "base_currency",
                                    "quote_currency"
                                ],
                                "properties": {
                                    "base_currency": {
                                        "type": "string",
                                        "example": "BTC"
                                    },
                                    "quote_currency": {
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "fee_rate": {
                                        "type": "string",
                                        "example": "0.003"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pool created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pool_id": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/pools/{poolId}": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Get pool details",
                "operationId": "4322a89ca0d29c8de3dbda2fe4b93244",
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool details with metrics"
                    }
                }
            }
        },
        "/api/liquidity/add": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Add liquidity to a pool",
                "operationId": "84774894371f9b79a160772beb0fa27f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id",
                                    "base_amount",
                                    "quote_amount"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "base_amount": {
                                        "type": "string",
                                        "example": "0.1"
                                    },
                                    "quote_amount": {
                                        "type": "string",
                                        "example": "4800"
                                    },
                                    "min_shares": {
                                        "type": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liquidity added"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/remove": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Remove liquidity from a pool",
                "operationId": "5c35804ff51fc937be483bd9df16a0a3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id",
                                    "shares"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "shares": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "min_base_amount": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "min_quote_amount": {
                                        "type": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liquidity removed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/swap": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Execute a swap through liquidity pool",
                "operationId": "1c259535f720c34736de7875fbbad065",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id",
                                    "input_currency",
                                    "input_amount"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "input_currency": {
                                        "type": "string",
                                        "example": "BTC"
                                    },
                                    "input_amount": {
                                        "type": "string",
                                        "example": "0.1"
                                    },
                                    "min_output_amount": {
                                        "type": "string",
                                        "example": "4700"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Swap executed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/positions": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Get user's liquidity positions",
                "operationId": "097a4b0617c5cabfea6bf62667b14c85",
                "responses": {
                    "200": {
                        "description": "User's positions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/claim-rewards": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Claim pending rewards",
                "operationId": "3a923f99a81ce4eeafea391af387da62",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rewards claimed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/il-protection/{positionId}": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Calculate impermanent loss for a position",
                "operationId": "711c9edfdc3347647ab277dfb48957e1",
                "parameters": [
                    {
                        "name": "positionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IL calculation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "position_id": {
                                            "type": "integer"
                                        },
                                        "entry_price": {
                                            "type": "string"
                                        },
                                        "current_price": {
                                            "type": "string"
                                        },
                                        "impermanent_loss": {
                                            "type": "string"
                                        },
                                        "impermanent_loss_percent": {
                                            "type": "string"
                                        },
                                        "is_protected": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/il-protection/enable": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Enable IL protection for a pool",
                "operationId": "06ef3bc4108dbde97f53f49e4af66e1d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "protection_threshold": {
                                        "type": "string",
                                        "example": "0.02"
                                    },
                                    "max_coverage": {
                                        "type": "string",
                                        "example": "0.80"
                                    },
                                    "min_holding_hours": {
                                        "type": "integer",
                                        "example": 168
                                    },
                                    "fund_size": {
                                        "type": "string",
                                        "example": "100000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "IL protection enabled"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/il-protection/process-claims": {
            "post": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Process IL protection claims for a pool",
                "operationId": "04688a16dee0062eadff31e36ff6f055",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pool_id"
                                ],
                                "properties": {
                                    "pool_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Claims processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "claims": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "provider_id": {
                                                        "type": "string"
                                                    },
                                                    "compensation": {
                                                        "type": "string"
                                                    },
                                                    "compensation_currency": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/il-protection/fund-requirements/{poolId}": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Get IL protection fund requirements",
                "operationId": "9fea64396457896706bf3cd47b0316e2",
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fund requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pool_id": {
                                            "type": "string"
                                        },
                                        "total_liquidity_value": {
                                            "type": "string"
                                        },
                                        "protected_value": {
                                            "type": "string"
                                        },
                                        "max_potential_compensation": {
                                            "type": "string"
                                        },
                                        "recommended_fund_size": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/liquidity/analytics/{poolId}": {
            "get": {
                "tags": [
                    "Liquidity Pool"
                ],
                "summary": "Get pool analytics and performance metrics",
                "operationId": "f726e551170dc04ba0e1338195141b7c",
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool analytics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pool_id": {
                                            "type": "string"
                                        },
                                        "tvl": {
                                            "type": "string"
                                        },
                                        "volume_24h": {
                                            "type": "string"
                                        },
                                        "fees_24h": {
                                            "type": "string"
                                        },
                                        "apy": {
                                            "type": "string"
                                        },
                                        "provider_count": {
                                            "type": "integer"
                                        },
                                        "price_history": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ai/mcp/tools": {
            "get": {
                "tags": [
                    "MCP Tools"
                ],
                "summary": "List available MCP tools",
                "description": "Get a list of all available MCP tools that can be used by AI agents",
                "operationId": "listMcpTools",
                "responses": {
                    "200": {
                        "description": "List of available MCP tools",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "get_account_balance"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Retrieve the current balance for a customer account"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "account_management"
                                                    },
                                                    "parameters": {
                                                        "type": "object"
                                                    },
                                                    "requires_auth": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "rate_limit": {
                                                        "type": "integer",
                                                        "example": 100
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/mcp/tools/{tool}/execute": {
            "post": {
                "tags": [
                    "MCP Tools"
                ],
                "summary": "Execute an MCP tool",
                "description": "Execute a specific MCP tool with the provided parameters",
                "operationId": "executeMcpTool",
                "parameters": [
                    {
                        "name": "tool",
                        "in": "path",
                        "description": "The name of the tool to execute",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "get_account_balance"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "parameters": {
                                        "type": "object",
                                        "example": {
                                            "account_id": "acct_123",
                                            "include_pending": true
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tool execution result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "tool": {
                                            "type": "string",
                                            "example": "get_account_balance"
                                        },
                                        "result": {
                                            "type": "object"
                                        },
                                        "execution_time_ms": {
                                            "type": "integer",
                                            "example": 145
                                        },
                                        "metadata": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or tool not found"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/mcp/tools/{tool}": {
            "get": {
                "tags": [
                    "MCP Tools"
                ],
                "summary": "Get MCP tool details",
                "description": "Get detailed information about a specific MCP tool",
                "operationId": "getMcpToolDetails",
                "parameters": [
                    {
                        "name": "tool",
                        "in": "path",
                        "description": "The name of the tool",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "get_account_balance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tool details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "category": {
                                            "type": "string"
                                        },
                                        "parameters": {
                                            "type": "object"
                                        },
                                        "examples": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "rate_limit": {
                                            "type": "integer"
                                        },
                                        "requires_auth": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tool not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ai/mcp/register": {
            "post": {
                "tags": [
                    "MCP Tools"
                ],
                "summary": "Register a new MCP tool",
                "description": "Register a custom MCP tool for use by AI agents",
                "operationId": "registerMcpTool",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "endpoint",
                                    "parameters"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "custom_tool"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A custom tool for specific operations"
                                    },
                                    "endpoint": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://api.example.com/tool"
                                    },
                                    "parameters": {
                                        "type": "object"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "custom"
                                    },
                                    "requires_auth": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "rate_limit": {
                                        "type": "integer",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tool registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "tool_id": {
                                            "type": "string",
                                            "example": "tool_abc123"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tool registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid tool configuration"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "List all polls",
                "description": "Retrieve a paginated list of polls with optional filtering",
                "operationId": "6e193446b08121fa820e77c1a32e6c5d",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by poll status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by poll type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "single_choice",
                                "multiple_choice",
                                "weighted_choice",
                                "yes_no",
                                "ranked_choice"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of polls per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Poll"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Create a new poll",
                "description": "Create a new governance poll",
                "operationId": "cfe7460dbf9e8b80cc0122d588147993",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type",
                                    "options",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Should we add support for Japanese Yen?"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Proposal to add JPY as supported currency"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "single_choice",
                                            "multiple_choice",
                                            "weighted_choice",
                                            "yes_no",
                                            "ranked_choice"
                                        ]
                                    },
                                    "options": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "label": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "required_participation": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "voting_power_strategy": {
                                        "type": "string",
                                        "enum": [
                                            "one_user_one_vote",
                                            "asset_weighted_vote"
                                        ]
                                    },
                                    "execution_workflow": {
                                        "type": "string",
                                        "example": "AddAssetWorkflow"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Poll created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/active": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get active polls",
                "description": "Retrieve all currently active polls that are available for voting",
                "operationId": "f13be49b1a672f49c8513b45c4d9fe46",
                "responses": {
                    "200": {
                        "description": "List of active polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Poll"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/polls/{uuid}": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get poll details",
                "description": "Retrieve detailed information about a specific poll",
                "operationId": "4a5d22fa28a78c7c00336312b7e412d6",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                }
            }
        },
        "/api/polls/{uuid}/activate": {
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Activate a poll",
                "description": "Activate a draft poll to make it available for voting",
                "operationId": "1f3250511c8a2af8828834d02eda9f57",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Poll"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Poll cannot be activated"
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/{uuid}/vote": {
            "post": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Cast a vote",
                "description": "Cast a vote in an active poll",
                "operationId": "2efbbf8861a1235c1015ed44b7d9b056",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "selected_options"
                                ],
                                "properties": {
                                    "selected_options": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vote cast successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Vote"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot vote in this poll"
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/polls/{uuid}/results": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get poll results",
                "description": "Retrieve current results for a poll",
                "operationId": "e4386a648a2adc9a8b8e2c77e409ea96",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PollResult"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                }
            }
        },
        "/api/polls/{uuid}/voting-power": {
            "get": {
                "tags": [
                    "Governance - Polls"
                ],
                "summary": "Get user's voting power",
                "description": "Check the authenticated user's voting power for a specific poll",
                "operationId": "5a581e2bc5f798877c24ec9c8c8d8ed8",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's voting power",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "voting_power": {
                                            "type": "integer"
                                        },
                                        "can_vote": {
                                            "type": "boolean"
                                        },
                                        "has_voted": {
                                            "type": "boolean"
                                        },
                                        "strategy": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/ctr": {
            "post": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Generate Currency Transaction Report",
                "description": "Generates a CTR report for transactions exceeding regulatory thresholds (Admin only)",
                "operationId": "generateCTR",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date"
                                ],
                                "properties": {
                                    "date": {
                                        "description": "Date for which to generate the CTR (must be today or earlier)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CTR generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "ctr"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currency Transaction Report generated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/sar": {
            "post": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Generate SAR candidates report",
                "description": "Generates a report of potential suspicious activities requiring SAR filing (Admin only)",
                "operationId": "generateSARCandidates",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SAR candidates report generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "sar_candidates"
                                                },
                                                "period_start": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "period_end": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/compliance-summary": {
            "post": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Generate monthly compliance summary",
                "description": "Generates a comprehensive compliance summary report for the specified month (Admin only)",
                "operationId": "generateComplianceSummary",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "month"
                                ],
                                "properties": {
                                    "month": {
                                        "description": "Month in YYYY-MM format",
                                        "type": "string",
                                        "pattern": "^\\d{4}-\\d{2}$",
                                        "example": "2024-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Compliance summary generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "compliance_summary"
                                                },
                                                "month": {
                                                    "type": "string",
                                                    "example": "January 2024"
                                                },
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/kyc": {
            "post": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Generate KYC compliance report",
                "description": "Generates a Know Your Customer (KYC) compliance status report (Admin only)",
                "operationId": "generateKycReport",
                "responses": {
                    "200": {
                        "description": "KYC report generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "kyc_compliance"
                                                },
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports": {
            "get": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "List all regulatory reports",
                "description": "Retrieves a paginated list of all generated regulatory reports",
                "operationId": "listRegulatoryReports",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by report type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ctr",
                                "sar",
                                "compliance",
                                "kyc"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of reports per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reports list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "reports": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "filename": {
                                                                "type": "string"
                                                            },
                                                            "full_path": {
                                                                "type": "string"
                                                            },
                                                            "size": {
                                                                "type": "integer"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "download_url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "has_more": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "available_types": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "total_reports": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to list reports"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/{filename}": {
            "get": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Get specific report content",
                "description": "Retrieves the full content of a specific regulatory report",
                "operationId": "getRegulatoryReport",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "Report filename",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ctr-2024-01-15.json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "file_path": {
                                                    "type": "string"
                                                },
                                                "size": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "content": {
                                                    "description": "Full report content",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filename format"
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "500": {
                        "description": "Failed to retrieve report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Delete a regulatory report",
                "description": "Permanently deletes a regulatory report file (Admin only)",
                "operationId": "deleteRegulatoryReport",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "Report filename to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ctr-2024-01-15.json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filename format"
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "500": {
                        "description": "Failed to delete report"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/reports/{filename}/download": {
            "get": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Download regulatory report file",
                "description": "Downloads a regulatory report file as JSON attachment",
                "operationId": "downloadRegulatoryReport",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "Report filename to download",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ctr-2024-01-15.json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download successful",
                        "headers": {
                            "Content-Type": {
                                "description": "Content type of the file",
                                "schema": {
                                    "type": "string",
                                    "example": "application/json"
                                }
                            },
                            "Content-Disposition": {
                                "description": "Attachment header with filename",
                                "schema": {
                                    "type": "string",
                                    "example": "attachment; filename=ctr-2024-01-15.json"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filename format"
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regulatory/metrics": {
            "get": {
                "tags": [
                    "Regulatory Reporting"
                ],
                "summary": "Get regulatory compliance metrics",
                "description": "Retrieves comprehensive regulatory compliance metrics and KPIs (Admin only)",
                "operationId": "getRegulatoryMetrics",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for metrics",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "period": {
                                                    "type": "string"
                                                },
                                                "period_start": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "period_end": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "metrics": {
                                                    "properties": {
                                                        "kyc": {
                                                            "description": "KYC compliance metrics",
                                                            "type": "object"
                                                        },
                                                        "transactions": {
                                                            "description": "Transaction monitoring metrics",
                                                            "type": "object"
                                                        },
                                                        "users": {
                                                            "description": "User compliance metrics",
                                                            "type": "object"
                                                        },
                                                        "risk": {
                                                            "description": "Risk assessment metrics",
                                                            "type": "object"
                                                        },
                                                        "gdpr": {
                                                            "description": "GDPR compliance metrics",
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve metrics"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoins": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "List all stablecoins",
                "description": "Retrieve a list of all configured stablecoins with optional filtering",
                "operationId": "listStablecoins",
                "parameters": [
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Filter to show only active stablecoins",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "minting_enabled",
                        "in": "query",
                        "description": "Filter to show only stablecoins with minting enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "burning_enabled",
                        "in": "query",
                        "description": "Filter to show only stablecoins with burning enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "stability_mechanism",
                        "in": "query",
                        "description": "Filter by stability mechanism type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collateralized",
                                "algorithmic",
                                "hybrid"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Create a new stablecoin",
                "description": "Create a new stablecoin configuration",
                "operationId": "createStablecoin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Stablecoin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoins/{code}": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Get stablecoin details",
                "description": "Retrieve detailed information about a specific stablecoin including collateralization metrics",
                "operationId": "getStablecoin",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Update stablecoin configuration",
                "description": "Update an existing stablecoin's configuration parameters",
                "operationId": "updateStablecoin",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "FinAegis USD Updated"
                                    },
                                    "collateral_ratio": {
                                        "type": "number",
                                        "example": 1.6
                                    },
                                    "min_collateral_ratio": {
                                        "type": "number",
                                        "example": 1.3
                                    },
                                    "liquidation_penalty": {
                                        "type": "number",
                                        "example": 0.1
                                    },
                                    "max_supply": {
                                        "type": "integer",
                                        "example": 10000000
                                    },
                                    "mint_fee": {
                                        "type": "number",
                                        "example": 0.004
                                    },
                                    "burn_fee": {
                                        "type": "number",
                                        "example": 0.003
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "minting_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "burning_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "metadata": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stablecoin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoins/{code}/metrics": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Get stablecoin metrics and statistics",
                "description": "Retrieve detailed metrics and statistics for a specific stablecoin",
                "operationId": "getStablecoinMetrics",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "stablecoin_code": {
                                                    "type": "string",
                                                    "example": "FUSD"
                                                },
                                                "total_supply": {
                                                    "type": "integer",
                                                    "example": 1000000
                                                },
                                                "total_collateral_value": {
                                                    "type": "integer",
                                                    "example": 1500000
                                                },
                                                "global_ratio": {
                                                    "type": "number",
                                                    "example": 1.5
                                                },
                                                "target_ratio": {
                                                    "type": "number",
                                                    "example": 1.5
                                                },
                                                "min_ratio": {
                                                    "type": "number",
                                                    "example": 1.2
                                                },
                                                "active_positions": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "at_risk_positions": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "is_healthy": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "collateral_distribution": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found or no metrics available"
                    }
                }
            }
        },
        "/api/v2/stablecoins/metrics": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Get system-wide stablecoin metrics",
                "description": "Retrieve metrics for all stablecoins in the system",
                "operationId": "getSystemStablecoinMetrics",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "stablecoin_code": {
                                                        "type": "string"
                                                    },
                                                    "total_supply": {
                                                        "type": "integer"
                                                    },
                                                    "global_ratio": {
                                                        "type": "number"
                                                    },
                                                    "is_healthy": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoins/{code}/stability": {
            "post": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Execute stability mechanisms for a stablecoin",
                "description": "Trigger stability mechanism execution for a specific stablecoin",
                "operationId": "executeStabilityMechanism",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "mechanism": {
                                                    "type": "string",
                                                    "example": "collateralized"
                                                },
                                                "global_ratio": {
                                                    "type": "number",
                                                    "example": 1.5
                                                },
                                                "target_ratio": {
                                                    "type": "number",
                                                    "example": 1.5
                                                },
                                                "actions_taken": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoins/health": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Check system health across all stablecoins",
                "description": "Retrieve system-wide health status for all stablecoins",
                "operationId": "getStablecoinSystemHealth",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "overall_status": {
                                                    "type": "string",
                                                    "example": "healthy"
                                                },
                                                "stablecoin_status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "emergency_actions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoins/{code}/collateral": {
            "get": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Get collateral distribution for a stablecoin",
                "description": "Retrieve the distribution of collateral assets backing a stablecoin",
                "operationId": "getStablecoinCollateralDistribution",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "asset_code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "total_amount": {
                                                        "type": "integer",
                                                        "example": 800000
                                                    },
                                                    "total_value": {
                                                        "type": "integer",
                                                        "example": 800000
                                                    },
                                                    "position_count": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "percentage": {
                                                        "type": "number",
                                                        "example": 53.33
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found"
                    }
                }
            }
        },
        "/api/v2/stablecoins/{code}/deactivate": {
            "post": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Deactivate a stablecoin",
                "description": "Deactivate a stablecoin, disabling minting and burning",
                "operationId": "deactivateStablecoin",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stablecoin deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stablecoin deactivated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoins/{code}/reactivate": {
            "post": {
                "tags": [
                    "Stablecoins"
                ],
                "summary": "Reactivate a stablecoin",
                "description": "Reactivate a previously deactivated stablecoin",
                "operationId": "reactivateStablecoin",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "The stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stablecoin reactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stablecoin reactivated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stablecoin not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/mint": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Mint stablecoins by locking collateral",
                "description": "Create a new collateral position and mint stablecoins against it",
                "operationId": "mintStablecoin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_uuid",
                                    "stablecoin_code",
                                    "collateral_asset_code",
                                    "collateral_amount",
                                    "mint_amount"
                                ],
                                "properties": {
                                    "account_uuid": {
                                        "description": "Account UUID to mint for",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "stablecoin_code": {
                                        "description": "Stablecoin to mint",
                                        "type": "string",
                                        "example": "FUSD"
                                    },
                                    "collateral_asset_code": {
                                        "description": "Asset to use as collateral",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "collateral_amount": {
                                        "description": "Amount of collateral to lock (in smallest unit)",
                                        "type": "integer",
                                        "example": 150000
                                    },
                                    "mint_amount": {
                                        "description": "Amount of stablecoin to mint (in smallest unit)",
                                        "type": "integer",
                                        "example": 100000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stablecoin minted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stablecoin minted successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "position_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "stablecoin_code": {
                                                    "type": "string",
                                                    "example": "FUSD"
                                                },
                                                "collateral_asset_code": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "collateral_amount": {
                                                    "type": "integer",
                                                    "example": 150000
                                                },
                                                "debt_amount": {
                                                    "type": "integer",
                                                    "example": 100000
                                                },
                                                "collateral_ratio": {
                                                    "type": "string",
                                                    "example": "1.5000"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/burn": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Burn stablecoins and release collateral",
                "description": "Burn stablecoins to reduce debt and optionally release collateral",
                "operationId": "burnStablecoin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_uuid",
                                    "stablecoin_code",
                                    "burn_amount"
                                ],
                                "properties": {
                                    "account_uuid": {
                                        "description": "Account UUID to burn from",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "stablecoin_code": {
                                        "description": "Stablecoin to burn",
                                        "type": "string",
                                        "example": "FUSD"
                                    },
                                    "burn_amount": {
                                        "description": "Amount of stablecoin to burn (in smallest unit)",
                                        "type": "integer",
                                        "example": 50000
                                    },
                                    "collateral_release_amount": {
                                        "description": "Specific amount of collateral to release. If not provided, proportional amount will be released",
                                        "type": "integer",
                                        "example": 75000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stablecoin burned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stablecoin burned successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "position_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "stablecoin_code": {
                                                    "type": "string",
                                                    "example": "FUSD"
                                                },
                                                "collateral_amount": {
                                                    "type": "integer",
                                                    "example": 75000
                                                },
                                                "debt_amount": {
                                                    "type": "integer",
                                                    "example": 50000
                                                },
                                                "collateral_ratio": {
                                                    "type": "string",
                                                    "example": "1.5000"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/add-collateral": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Add collateral to an existing position",
                "description": "Increase collateral to improve position health and collateral ratio",
                "operationId": "addCollateral",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_uuid",
                                    "stablecoin_code",
                                    "collateral_asset_code",
                                    "collateral_amount"
                                ],
                                "properties": {
                                    "account_uuid": {
                                        "description": "Account UUID",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "stablecoin_code": {
                                        "description": "Stablecoin code",
                                        "type": "string",
                                        "example": "FUSD"
                                    },
                                    "collateral_asset_code": {
                                        "description": "Collateral asset code",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "collateral_amount": {
                                        "description": "Amount of collateral to add (in smallest unit)",
                                        "type": "integer",
                                        "example": 50000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Collateral added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Collateral added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "position_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "collateral_amount": {
                                                    "type": "integer",
                                                    "example": 200000
                                                },
                                                "debt_amount": {
                                                    "type": "integer",
                                                    "example": 100000
                                                },
                                                "collateral_ratio": {
                                                    "type": "string",
                                                    "example": "2.0000"
                                                },
                                                "health_improved": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/accounts/{accountUuid}/positions": {
            "get": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Get account's stablecoin positions",
                "description": "Retrieve all collateral positions for a specific account",
                "operationId": "getAccountPositions",
                "parameters": [
                    {
                        "name": "accountUuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                                    },
                                                    "stablecoin_code": {
                                                        "type": "string",
                                                        "example": "FUSD"
                                                    },
                                                    "collateral_asset_code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "collateral_amount": {
                                                        "type": "integer",
                                                        "example": 150000
                                                    },
                                                    "debt_amount": {
                                                        "type": "integer",
                                                        "example": 100000
                                                    },
                                                    "collateral_ratio": {
                                                        "type": "string",
                                                        "example": "1.5000"
                                                    },
                                                    "liquidation_price": {
                                                        "type": "string",
                                                        "example": "0.80000000"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "health_score": {
                                                        "type": "number",
                                                        "example": 0.75
                                                    },
                                                    "recommendations": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoin-operations/positions/{positionUuid}": {
            "get": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Get position details with recommendations",
                "description": "Retrieve detailed information about a specific collateral position including health metrics and recommendations",
                "operationId": "getPositionDetails",
                "parameters": [
                    {
                        "name": "positionUuid",
                        "in": "path",
                        "description": "Position UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "stablecoin_code": {
                                                    "type": "string",
                                                    "example": "FUSD"
                                                },
                                                "collateral_asset_code": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "collateral_amount": {
                                                    "type": "integer",
                                                    "example": 150000
                                                },
                                                "debt_amount": {
                                                    "type": "integer",
                                                    "example": 100000
                                                },
                                                "collateral_ratio": {
                                                    "type": "string",
                                                    "example": "1.5000"
                                                },
                                                "health_score": {
                                                    "type": "number",
                                                    "example": 0.75
                                                },
                                                "max_mint_amount": {
                                                    "type": "integer",
                                                    "example": 25000
                                                },
                                                "liquidation_price": {
                                                    "type": "string",
                                                    "example": "0.80000000"
                                                },
                                                "is_at_risk": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "recommendations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string",
                                                                "example": "mint_more"
                                                            },
                                                            "urgency": {
                                                                "type": "string",
                                                                "example": "low"
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "example": "Position is over-collateralized, you can mint more stablecoins"
                                                            },
                                                            "max_mint_amount": {
                                                                "type": "integer",
                                                                "example": 25000
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoin-operations/liquidation-opportunities": {
            "get": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Get liquidation opportunities",
                "description": "Retrieve positions eligible for liquidation with potential rewards",
                "operationId": "getLiquidationOpportunities",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of opportunities to return (default: 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50
                        }
                    },
                    {
                        "name": "stablecoin_code",
                        "in": "query",
                        "description": "Filter by stablecoin code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "position_uuid": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                                    },
                                                    "account_uuid": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                                    },
                                                    "stablecoin_code": {
                                                        "type": "string",
                                                        "example": "FUSD"
                                                    },
                                                    "eligible": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "reward": {
                                                        "type": "integer",
                                                        "example": 5000
                                                    },
                                                    "penalty": {
                                                        "type": "integer",
                                                        "example": 10000
                                                    },
                                                    "collateral_seized": {
                                                        "type": "integer",
                                                        "example": 100000
                                                    },
                                                    "debt_amount": {
                                                        "type": "integer",
                                                        "example": 90000
                                                    },
                                                    "collateral_asset": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "current_ratio": {
                                                        "type": "string",
                                                        "example": "1.1000"
                                                    },
                                                    "min_ratio": {
                                                        "type": "string",
                                                        "example": "1.2000"
                                                    },
                                                    "priority_score": {
                                                        "type": "number",
                                                        "example": 0.85
                                                    },
                                                    "health_score": {
                                                        "type": "number",
                                                        "example": 0.1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoin-operations/positions/{positionUuid}/liquidate": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Liquidate a specific position",
                "description": "Execute liquidation on an eligible collateral position",
                "operationId": "liquidatePosition",
                "parameters": [
                    {
                        "name": "positionUuid",
                        "in": "path",
                        "description": "Position UUID to liquidate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position liquidated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Position liquidated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "position_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                },
                                                "liquidated_debt": {
                                                    "type": "integer",
                                                    "example": 90000
                                                },
                                                "liquidated_collateral": {
                                                    "type": "integer",
                                                    "example": 100000
                                                },
                                                "penalty_amount": {
                                                    "type": "integer",
                                                    "example": 10000
                                                },
                                                "liquidator_reward": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "protocol_fee": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "returned_to_owner": {
                                                    "type": "integer",
                                                    "example": 90000
                                                },
                                                "liquidator_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "456e7890-e89b-12d3-a456-426614174001"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Position not eligible for liquidation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/positions/{positionUuid}/liquidation-reward": {
            "get": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Calculate potential liquidation reward for a position",
                "description": "Calculate the potential reward for liquidating a specific position",
                "operationId": "calculateLiquidationReward",
                "parameters": [
                    {
                        "name": "positionUuid",
                        "in": "path",
                        "description": "Position UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "eligible": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reward": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "penalty": {
                                                    "type": "integer",
                                                    "example": 10000
                                                },
                                                "collateral_seized": {
                                                    "type": "integer",
                                                    "example": 100000
                                                },
                                                "debt_amount": {
                                                    "type": "integer",
                                                    "example": 90000
                                                },
                                                "collateral_asset": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "current_ratio": {
                                                    "type": "string",
                                                    "example": "1.1000"
                                                },
                                                "min_ratio": {
                                                    "type": "string",
                                                    "example": "1.2000"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stablecoin-operations/stablecoins/{stablecoinCode}/simulate-liquidation": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Simulate mass liquidation scenario",
                "description": "Simulate the impact of a price drop on collateral positions",
                "operationId": "simulateMassLiquidation",
                "parameters": [
                    {
                        "name": "stablecoinCode",
                        "in": "path",
                        "description": "Stablecoin code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "price_drop_percentage"
                                ],
                                "properties": {
                                    "price_drop_percentage": {
                                        "description": "Price drop percentage (0-1)",
                                        "type": "number",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "example": 0.2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "stablecoin_code": {
                                                    "type": "string",
                                                    "example": "FUSD"
                                                },
                                                "price_drop_percentage": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total_positions": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "positions_liquidated": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "liquidation_impact_percentage": {
                                                    "type": "integer",
                                                    "example": 32
                                                },
                                                "total_collateral_seized": {
                                                    "type": "integer",
                                                    "example": 800000
                                                },
                                                "total_debt_liquidated": {
                                                    "type": "integer",
                                                    "example": 720000
                                                },
                                                "detailed_results": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/auto-liquidate": {
            "post": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Execute automatic liquidation for all eligible positions",
                "description": "Automatically liquidate all positions that meet liquidation criteria",
                "operationId": "executeAutoLiquidation",
                "responses": {
                    "200": {
                        "description": "Automatic liquidation executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Automatic liquidation executed"
                                        },
                                        "data": {
                                            "properties": {
                                                "liquidated_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "failed_count": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "total_liquidator_reward": {
                                                    "type": "integer",
                                                    "example": 15000
                                                },
                                                "total_protocol_fees": {
                                                    "type": "integer",
                                                    "example": 15000
                                                },
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/stablecoin-operations/positions-at-risk": {
            "get": {
                "tags": [
                    "Stablecoin Operations"
                ],
                "summary": "Get positions at risk of liquidation",
                "description": "Retrieve positions that are close to liquidation threshold",
                "operationId": "getPositionsAtRisk",
                "parameters": [
                    {
                        "name": "buffer_ratio",
                        "in": "query",
                        "description": "Risk buffer ratio (default: 0.05)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0.05
                        }
                    },
                    {
                        "name": "stablecoin_code",
                        "in": "query",
                        "description": "Filter by stablecoin code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                                    },
                                                    "account_uuid": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                                    },
                                                    "stablecoin_code": {
                                                        "type": "string",
                                                        "example": "FUSD"
                                                    },
                                                    "collateral_ratio": {
                                                        "type": "string",
                                                        "example": "1.2500"
                                                    },
                                                    "health_score": {
                                                        "type": "number",
                                                        "example": 0.25
                                                    },
                                                    "risk_level": {
                                                        "type": "string",
                                                        "enum": [
                                                            "low",
                                                            "medium",
                                                            "high",
                                                            "critical"
                                                        ],
                                                        "example": "high"
                                                    },
                                                    "recommendations": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "action": {
                                                                    "type": "string",
                                                                    "example": "add_collateral"
                                                                },
                                                                "urgency": {
                                                                    "type": "string",
                                                                    "example": "high"
                                                                },
                                                                "suggested_amount": {
                                                                    "type": "integer",
                                                                    "example": 25000
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{uuid}/deposit": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Deposit money to an account",
                "description": "Deposits money into a specified account",
                "operationId": "depositToAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 10000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Monthly salary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deposit successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "new_balance": {
                                                    "type": "integer",
                                                    "example": 60000
                                                },
                                                "amount_deposited": {
                                                    "type": "integer",
                                                    "example": 10000
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "deposit"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deposit successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot deposit to frozen account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/withdraw": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Withdraw money from an account",
                "description": "Withdraws money from a specified account",
                "operationId": "withdrawFromAccount",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "ATM withdrawal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Withdrawal successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "new_balance": {
                                                    "type": "integer",
                                                    "example": 45000
                                                },
                                                "amount_withdrawn": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "withdrawal"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Withdrawal successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient balance or frozen account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction history for an account",
                "description": "Retrieves paginated transaction history from event store",
                "operationId": "getAccountTransactions",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "credit",
                                "debit"
                            ]
                        }
                    },
                    {
                        "name": "asset_code",
                        "in": "query",
                        "description": "Filter by asset code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/transactions/reverse": {
            "post": {
                "tags": [
                    "Transaction Reversal"
                ],
                "summary": "Reverse a transaction",
                "description": "Reverse a completed transaction with audit trail for error recovery",
                "operationId": "71d326429bda82ab4a00b5855abf0557",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "asset_code",
                                    "transaction_type",
                                    "reversal_reason"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0.01,
                                        "example": 100.5
                                    },
                                    "asset_code": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "transaction_type": {
                                        "type": "string",
                                        "enum": [
                                            "debit",
                                            "credit"
                                        ],
                                        "example": "debit"
                                    },
                                    "reversal_reason": {
                                        "type": "string",
                                        "example": "Unauthorized transaction"
                                    },
                                    "original_transaction_id": {
                                        "type": "string",
                                        "example": "txn_123456789"
                                    },
                                    "authorized_by": {
                                        "type": "string",
                                        "example": "manager@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction reversal initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction reversal initiated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "reversal_id": {
                                                    "type": "string",
                                                    "example": "rev_987654321"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100.5
                                                },
                                                "asset_code": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "debit"
                                                },
                                                "reversal_reason": {
                                                    "type": "string",
                                                    "example": "Unauthorized transaction"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "initiated"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Account does not belong to user"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accounts/{uuid}/transactions/reversals": {
            "get": {
                "tags": [
                    "Transaction Reversal"
                ],
                "summary": "Get transaction reversal history",
                "description": "Get list of transaction reversals for an account",
                "operationId": "34b8098ea2d0d3aac1624f1ca69adcca",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Account UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "reversal_id": {
                                                        "type": "string",
                                                        "example": "rev_987654321"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "example": 100.5
                                                    },
                                                    "asset_code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "transaction_type": {
                                                        "type": "string",
                                                        "example": "debit"
                                                    },
                                                    "reversal_reason": {
                                                        "type": "string",
                                                        "example": "Unauthorized transaction"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "completed_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "limit": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "offset": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/reversals/{reversalId}/status": {
            "get": {
                "tags": [
                    "Transaction Reversal"
                ],
                "summary": "Get reversal status",
                "description": "Check the status of a specific transaction reversal",
                "operationId": "9a10109e3fecda40f50c8318670c73eb",
                "parameters": [
                    {
                        "name": "reversalId",
                        "in": "path",
                        "description": "Reversal ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "reversal_id": {
                                                    "type": "string",
                                                    "example": "rev_987654321"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "progress": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "steps_completed": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "validation"
                                                    }
                                                },
                                                "error_message": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reversal not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transfers": {
            "post": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Create a money transfer",
                "description": "Transfers money from one account to another",
                "operationId": "createTransfer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_account_uuid",
                                    "to_account_uuid",
                                    "amount"
                                ],
                                "properties": {
                                    "from_account_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "to_account_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "660e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5000
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Payment for services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transfer initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transfer_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "from_account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "to_account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer initiated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or business rule violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/voting/polls": {
            "get": {
                "tags": [
                    "User Voting"
                ],
                "summary": "Get polls available for voting",
                "description": "Get all active polls with user's voting context",
                "operationId": "5450e25994657f4d0b029671600f0874",
                "responses": {
                    "200": {
                        "description": "List of voting polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserVotingPoll"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/voting/polls/upcoming": {
            "get": {
                "tags": [
                    "User Voting"
                ],
                "summary": "Get upcoming polls",
                "description": "Get polls that will become active soon",
                "operationId": "49ddf75a6932bd0c66c0db0e2a21862e",
                "responses": {
                    "200": {
                        "description": "List of upcoming polls"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/voting/polls/history": {
            "get": {
                "tags": [
                    "User Voting"
                ],
                "summary": "Get user's voting history",
                "description": "Get all polls the user has participated in",
                "operationId": "f48aa878738f35d16876ce73c69e5139",
                "responses": {
                    "200": {
                        "description": "User's voting history"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/voting/polls/{uuid}/vote": {
            "post": {
                "tags": [
                    "User Voting"
                ],
                "summary": "Submit vote for GCU basket composition",
                "description": "Submit weighted allocation vote for basket composition",
                "operationId": "a4defe7c42a9273987d21053b55d078f",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "allocations"
                                ],
                                "properties": {
                                    "allocations": {
                                        "description": "Currency allocations (must sum to 100)",
                                        "type": "object",
                                        "example": {
                                            "USD": 40,
                                            "EUR": 30,
                                            "GBP": 15,
                                            "CHF": 10,
                                            "JPY": 3,
                                            "XAU": 2
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vote submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "vote_id": {
                                            "type": "string"
                                        },
                                        "voting_power_used": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid vote data"
                    },
                    "403": {
                        "description": "Cannot vote on this poll"
                    },
                    "404": {
                        "description": "Poll not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/voting/dashboard": {
            "get": {
                "tags": [
                    "User Voting"
                ],
                "summary": "Get voting dashboard data",
                "description": "Get comprehensive voting dashboard information",
                "operationId": "b3271ffb72f43753d608102d2ed56b57",
                "responses": {
                    "200": {
                        "description": "Dashboard data"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get GCU information",
                "description": "Get current information about the Global Currency Unit including composition and value",
                "operationId": "getGCUInfo",
                "responses": {
                    "200": {
                        "description": "GCU information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Global Currency Unit"
                                                },
                                                "symbol": {
                                                    "type": "string",
                                                    "example": "Ǥ"
                                                },
                                                "current_value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.0975
                                                },
                                                "value_currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "last_rebalanced": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "next_rebalance": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "composition": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "asset_code": {
                                                                "type": "string"
                                                            },
                                                            "asset_name": {
                                                                "type": "string"
                                                            },
                                                            "weight": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "value_contribution": {
                                                                "type": "number",
                                                                "format": "float"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_supply": {
                                                            "type": "integer"
                                                        },
                                                        "holders_count": {
                                                            "type": "integer"
                                                        },
                                                        "24h_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/value-history": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get GCU value history",
                "description": "Get historical value data for the Global Currency Unit",
                "operationId": "getGCUValueHistory",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for history",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "30d",
                            "enum": [
                                "24h",
                                "7d",
                                "30d",
                                "90d",
                                "1y",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Data interval",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "daily",
                            "enum": [
                                "hourly",
                                "daily",
                                "weekly",
                                "monthly"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GCU value history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "change": {
                                                        "type": "number",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "period": {
                                                    "type": "string"
                                                },
                                                "interval": {
                                                    "type": "string"
                                                },
                                                "start_value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "end_value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_change": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_change_percent": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/governance/active-polls": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get active GCU governance polls",
                "description": "Get currently active polls related to GCU governance",
                "operationId": "getGCUActivePolls",
                "responses": {
                    "200": {
                        "description": "Active GCU polls",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "participation_rate": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "current_results": {
                                                        "type": "object"
                                                    },
                                                    "time_remaining": {
                                                        "properties": {
                                                            "days": {
                                                                "type": "integer"
                                                            },
                                                            "hours": {
                                                                "type": "integer"
                                                            },
                                                            "human_readable": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/composition": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get real-time GCU composition data",
                "description": "Get detailed real-time composition data for the Global Currency Unit including current weights, values, and recent changes",
                "operationId": "getGCUComposition",
                "responses": {
                    "200": {
                        "description": "GCU composition data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "basket_code": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "total_value_usd": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "composition": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "asset_code": {
                                                                "type": "string"
                                                            },
                                                            "asset_name": {
                                                                "type": "string"
                                                            },
                                                            "asset_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "fiat",
                                                                    "crypto",
                                                                    "commodity"
                                                                ]
                                                            },
                                                            "weight": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "current_price_usd": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "value_contribution_usd": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "percentage_of_basket": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "24h_change": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "7d_change": {
                                                                "type": "number",
                                                                "format": "float"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "rebalancing": {
                                                    "properties": {
                                                        "frequency": {
                                                            "type": "string"
                                                        },
                                                        "last_rebalanced": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "next_rebalance": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "automatic": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "performance": {
                                                    "properties": {
                                                        "24h_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "24h_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "7d_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change_usd": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "30d_change_percent": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/supported-banks": {
            "get": {
                "tags": [
                    "GCU"
                ],
                "summary": "Get supported banks for GCU",
                "description": "Get list of banks that support GCU deposits and their coverage",
                "operationId": "getGCUSupportedBanks",
                "responses": {
                    "200": {
                        "description": "Supported banks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    },
                                                    "deposit_protection": {
                                                        "type": "string"
                                                    },
                                                    "deposit_protection_amount": {
                                                        "type": "integer"
                                                    },
                                                    "supported_currencies": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "features": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "operational",
                                                            "degraded",
                                                            "maintenance"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gcu/buy": {
            "post": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Buy GCU tokens",
                "description": "Purchase GCU tokens using fiat currency",
                "operationId": "buyGCU",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount to spend in source currency",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 100,
                                        "example": 1000
                                    },
                                    "currency": {
                                        "description": "Source currency code (EUR, USD, GBP, CHF)",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "account_uuid": {
                                        "description": "Account UUID (optional, defaults to user's primary account)",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GCU purchase successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "spent_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "spent_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "received_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 912.45
                                                },
                                                "received_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0.91245
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "new_gcu_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1912.45
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully purchased 912.45 GCU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient balance or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/sell": {
            "post": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Sell GCU tokens",
                "description": "Sell GCU tokens for fiat currency",
                "operationId": "sellGCU",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount of GCU to sell",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 10,
                                        "example": 100
                                    },
                                    "currency": {
                                        "description": "Target currency code (EUR, USD, GBP, CHF)",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "account_uuid": {
                                        "description": "Account UUID (optional, defaults to user's primary account)",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GCU sale successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "account_uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "sold_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "sold_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "received_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 109
                                                },
                                                "received_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.0956
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.1
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "new_gcu_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 812.45
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully sold 100.00 GCU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Insufficient GCU balance or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/quote": {
            "get": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Get GCU trading quote",
                "description": "Get a quote for buying or selling GCU",
                "operationId": "getGCUQuote",
                "parameters": [
                    {
                        "name": "operation",
                        "in": "query",
                        "description": "Operation type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "buy",
                                "sell"
                            ]
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount (in source currency for buy, in GCU for sell)",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0.01
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Fiat currency code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EUR",
                                "USD",
                                "GBP",
                                "CHF"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trading quote",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "operation": {
                                                    "type": "string",
                                                    "example": "buy"
                                                },
                                                "input_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "input_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "output_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 912.45
                                                },
                                                "output_currency": {
                                                    "type": "string",
                                                    "example": "GCU"
                                                },
                                                "exchange_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0.91245
                                                },
                                                "fee_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "fee_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "fee_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1
                                                },
                                                "quote_valid_until": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "minimum_amount": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "maximum_amount": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/gcu/trading-limits": {
            "get": {
                "tags": [
                    "GCU Trading"
                ],
                "summary": "Get user's GCU trading limits",
                "description": "Get the authenticated user's trading limits for GCU operations",
                "operationId": "getGCUTradingLimits",
                "responses": {
                    "200": {
                        "description": "Trading limits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "daily_buy_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10000
                                                },
                                                "daily_sell_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10000
                                                },
                                                "daily_buy_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 2500
                                                },
                                                "daily_sell_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "monthly_buy_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100000
                                                },
                                                "monthly_sell_limit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100000
                                                },
                                                "monthly_buy_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15000
                                                },
                                                "monthly_sell_used": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "minimum_buy_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "minimum_sell_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "kyc_level": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "limits_currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Public API"
                ],
                "summary": "Get API information",
                "description": "Returns information about the API including version, status, and available endpoints",
                "operationId": "getApiInfo",
                "responses": {
                    "200": {
                        "description": "API information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "FinAegis Public API"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "2.0.0"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "operational"
                                        },
                                        "endpoints": {
                                            "properties": {
                                                "accounts": {
                                                    "type": "string",
                                                    "example": "/v2/accounts"
                                                },
                                                "assets": {
                                                    "type": "string",
                                                    "example": "/v2/assets"
                                                },
                                                "exchange_rates": {
                                                    "type": "string",
                                                    "example": "/v2/exchange-rates"
                                                },
                                                "baskets": {
                                                    "type": "string",
                                                    "example": "/v2/baskets"
                                                },
                                                "webhooks": {
                                                    "type": "string",
                                                    "example": "/v2/webhooks"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "documentation": {
                                            "type": "string",
                                            "example": "https://docs.finaegis.org"
                                        },
                                        "support": {
                                            "type": "string",
                                            "example": "api@finaegis.org"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "tags": [
                    "Public API"
                ],
                "summary": "Get API status",
                "description": "Returns the current operational status of the API and its components",
                "operationId": "getApiStatus",
                "responses": {
                    "200": {
                        "description": "API status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "operational"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "components": {
                                            "properties": {
                                                "api": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "database": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "redis": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "bank_connectors": {
                                                    "properties": {
                                                        "paysera": {
                                                            "type": "string",
                                                            "example": "operational"
                                                        },
                                                        "deutsche_bank": {
                                                            "type": "string",
                                                            "example": "operational"
                                                        },
                                                        "santander": {
                                                            "type": "string",
                                                            "example": "degraded"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "metrics": {
                                            "properties": {
                                                "response_time_ms": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "uptime_percentage": {
                                                    "type": "number",
                                                    "example": 99.95
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get voting proposals",
                "operationId": "f318ecdd62462b7e0eb0109e731d3ec0",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, upcoming, past)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "upcoming",
                                "past"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of voting proposals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "voting_starts_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "voting_ends_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "participation_rate": {
                                                        "type": "number"
                                                    },
                                                    "approval_rate": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals/{id}": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get proposal details",
                "operationId": "a413e42f0d3750c7898ea1bc3daf6052",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proposal details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/gcu/voting/proposals/{id}/vote": {
            "post": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Cast a vote",
                "operationId": "26e7c1223824df9748e1bc7d40edfe53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vote": {
                                        "type": "string",
                                        "enum": [
                                            "for",
                                            "against",
                                            "abstain"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vote cast successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "vote": {
                                                    "type": "string"
                                                },
                                                "voting_power": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/gcu/voting/my-votes": {
            "get": {
                "tags": [
                    "GCU Voting"
                ],
                "summary": "Get user's voting history",
                "operationId": "1c38a74569aeed1d38baca6dd7c7e40f",
                "responses": {
                    "200": {
                        "description": "User's voting history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "proposal_id": {
                                                        "type": "integer"
                                                    },
                                                    "proposal_title": {
                                                        "type": "string"
                                                    },
                                                    "vote": {
                                                        "type": "string"
                                                    },
                                                    "voting_power": {
                                                        "type": "number"
                                                    },
                                                    "voted_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/webhooks": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List webhooks",
                "description": "Get a list of all configured webhooks for the authenticated user",
                "operationId": "listWebhooks",
                "responses": {
                    "200": {
                        "description": "List of webhooks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "format": "url"
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "is_active": {
                                                        "type": "boolean"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "last_triggered_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Create webhook",
                "description": "Create a new webhook endpoint",
                "operationId": "createWebhook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "events"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/webhook"
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "account.created",
                                            "transaction.completed"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Production webhook for transaction notifications"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Webhook created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "example": "whsec_[redacted]"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/{id}": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Get webhook details",
                "description": "Get details of a specific webhook",
                "operationId": "getWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "successful_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "failed_deliveries": {
                                                            "type": "integer"
                                                        },
                                                        "last_triggered_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Update webhook",
                "description": "Update webhook configuration",
                "operationId": "updateWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook updated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Delete webhook",
                "description": "Delete a webhook endpoint",
                "operationId": "deleteWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Webhook deleted"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/{id}/deliveries": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List webhook deliveries",
                "description": "Get delivery history for a webhook",
                "operationId": "listWebhookDeliveries",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "success",
                                "failed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook deliveries"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/webhooks/events": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "List available webhook events",
                "description": "Get a list of all available webhook events that can be subscribed to",
                "operationId": "listWebhookEvents",
                "responses": {
                    "200": {
                        "description": "Available webhook events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "account": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "transaction": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "transfer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "basket": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "governance": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/votes": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get user's voting history",
                "description": "Retrieve the authenticated user's voting history",
                "operationId": "552d3ad7dc75be8e39bc19d16c5fa972",
                "parameters": [
                    {
                        "name": "poll_id",
                        "in": "query",
                        "description": "Filter by specific poll ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of votes per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's voting history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vote"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/{id}": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get vote details",
                "description": "Retrieve detailed information about a specific vote",
                "operationId": "c2a9b1dfbe3ec738a52437c63f1be8ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Vote"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vote not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/{id}/verify": {
            "post": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Verify vote integrity",
                "description": "Verify the cryptographic signature of a vote",
                "operationId": "8f09df8ed257cc1fa8e0a0da6d92ae92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote verification result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "verified": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vote not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/votes/stats": {
            "get": {
                "tags": [
                    "Governance - Votes"
                ],
                "summary": "Get user's voting statistics",
                "description": "Retrieve statistics about the user's voting activity",
                "operationId": "f2be71d66073ac97b0a5bc8166b53aeb",
                "responses": {
                    "200": {
                        "description": "User's voting statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_votes": {
                                            "type": "integer"
                                        },
                                        "total_voting_power": {
                                            "type": "integer"
                                        },
                                        "recent_votes": {
                                            "description": "Votes in last 30 days",
                                            "type": "integer"
                                        },
                                        "avg_voting_power": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "participation_rate": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workflows": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "List all workflows with filtering",
                "description": "Retrieves a paginated list of workflows with optional filtering by status, class, and date range",
                "operationId": "listWorkflows",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by workflow status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "failed",
                                "waiting"
                            ]
                        }
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Filter by workflow class name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in workflow class and arguments",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Filter workflows created after this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Filter workflows created before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflows retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "stats": {
                                            "description": "Workflow statistics",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workflows/{id}": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get workflow details",
                "description": "Retrieves detailed information about a specific workflow including logs, exceptions, and compensation info",
                "operationId": "getWorkflow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workflow ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "workflow": {
                                            "description": "Workflow details with logs",
                                            "type": "object"
                                        },
                                        "exceptions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "compensation_info": {
                                            "description": "Compensation tracking information",
                                            "type": "object"
                                        },
                                        "execution_timeline": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workflow not found"
                    }
                }
            }
        },
        "/api/workflows/stats": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get workflow statistics",
                "description": "Retrieves overall workflow execution statistics and counts by status",
                "operationId": "getWorkflowStats",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_workflows": {
                                            "type": "integer"
                                        },
                                        "by_status": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        },
                                        "recent_executions": {
                                            "type": "integer"
                                        },
                                        "avg_execution_time": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workflows/status/{status}": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get workflows by status",
                "description": "Retrieves all workflows with a specific status",
                "operationId": "getWorkflowsByStatus",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Workflow status to filter by",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "failed",
                                "waiting"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflows retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "count": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status"
                    }
                }
            }
        },
        "/api/workflows/failed": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get failed workflows",
                "description": "Retrieves all failed workflows with detailed exception information",
                "operationId": "getFailedWorkflows",
                "responses": {
                    "200": {
                        "description": "Failed workflows retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "error_summary": {
                                            "properties": {
                                                "most_common_errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total_exceptions": {
                                                    "type": "integer"
                                                },
                                                "recent_exceptions": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workflows/metrics": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get workflow execution metrics",
                "description": "Retrieves detailed workflow execution metrics and performance data",
                "operationId": "getWorkflowMetrics",
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "execution_metrics": {
                                            "properties": {
                                                "last_24_hours": {
                                                    "properties": {
                                                        "total_executions": {
                                                            "type": "integer"
                                                        },
                                                        "successful": {
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "type": "integer"
                                                        },
                                                        "average_duration": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last_7_days": {
                                                    "properties": {
                                                        "total_executions": {
                                                            "type": "integer"
                                                        },
                                                        "successful": {
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "type": "integer"
                                                        },
                                                        "average_duration": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "workflow_types": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "performance_metrics": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workflows/search": {
            "post": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Search workflows",
                "description": "Search workflows by class, arguments, output, or exception content",
                "operationId": "searchWorkflows",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "query"
                                ],
                                "properties": {
                                    "query": {
                                        "description": "Search query",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 2
                                    },
                                    "type": {
                                        "description": "Type of search",
                                        "type": "string",
                                        "default": "all",
                                        "enum": [
                                            "class",
                                            "arguments",
                                            "output",
                                            "exception",
                                            "all"
                                        ]
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "default": 20,
                                        "maximum": 50,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "search_query": {
                                            "type": "string"
                                        },
                                        "search_type": {
                                            "type": "string"
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total_found": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/workflows/compensations": {
            "get": {
                "tags": [
                    "Workflow Monitoring"
                ],
                "summary": "Get compensation tracking",
                "description": "Retrieves workflows that have triggered compensations or rollback activities",
                "operationId": "getWorkflowCompensations",
                "responses": {
                    "200": {
                        "description": "Compensation data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "workflow": {
                                                        "type": "object"
                                                    },
                                                    "compensation_info": {
                                                        "type": "object"
                                                    },
                                                    "rollback_activities": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "compensation_summary": {
                                            "properties": {
                                                "total_workflows": {
                                                    "type": "integer"
                                                },
                                                "failed_workflows": {
                                                    "type": "integer"
                                                },
                                                "failure_rate": {
                                                    "type": "number"
                                                },
                                                "compensations_triggered": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AIMessage": {
                "title": "AI Message",
                "description": "AI conversation message",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "The message content",
                        "type": "string",
                        "example": "What is my account balance?"
                    },
                    "conversation_id": {
                        "description": "Conversation ID for context",
                        "type": "string",
                        "format": "uuid",
                        "example": "conv_123e4567-e89b-12d3-a456"
                    },
                    "context": {
                        "description": "Additional context for the AI",
                        "type": "object",
                        "example": {
                            "account_id": "acct_123",
                            "session_type": "web"
                        }
                    },
                    "model": {
                        "description": "AI model to use",
                        "type": "string",
                        "enum": [
                            "gpt-4",
                            "gpt-3.5-turbo",
                            "claude-3",
                            "llama-2"
                        ],
                        "example": "gpt-4"
                    },
                    "temperature": {
                        "description": "Creativity level",
                        "type": "number",
                        "maximum": 2,
                        "minimum": 0,
                        "example": 0.7
                    },
                    "stream": {
                        "description": "Enable streaming responses",
                        "type": "boolean",
                        "example": false
                    },
                    "enable_tools": {
                        "description": "Allow AI to use MCP tools",
                        "type": "boolean",
                        "example": true
                    },
                    "max_tokens": {
                        "description": "Maximum response length",
                        "type": "integer",
                        "example": 500
                    }
                },
                "type": "object"
            },
            "AIResponse": {
                "title": "AI Response",
                "description": "AI agent response",
                "properties": {
                    "message_id": {
                        "description": "Unique message ID",
                        "type": "string",
                        "example": "msg_abc123xyz"
                    },
                    "conversation_id": {
                        "description": "Conversation ID",
                        "type": "string",
                        "example": "conv_123e4567"
                    },
                    "content": {
                        "description": "AI response content",
                        "type": "string",
                        "example": "Your current balance is $12,456.78"
                    },
                    "confidence": {
                        "description": "Confidence score",
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "example": 0.92
                    },
                    "tools_used": {
                        "description": "MCP tools used",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "AccountBalanceTool",
                            "TransactionHistoryTool"
                        ]
                    },
                    "requires_action": {
                        "description": "Whether user action is required",
                        "type": "boolean",
                        "example": false
                    },
                    "actions": {
                        "description": "Required actions",
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "transfer"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Transfer $500 to John Smith"
                                },
                                "parameters": {
                                    "type": "object"
                                },
                                "confidence": {
                                    "type": "number",
                                    "example": 0.89
                                }
                            },
                            "type": "object"
                        }
                    },
                    "metadata": {
                        "description": "Response metadata",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "MCPTool": {
                "title": "MCP Tool",
                "description": "Model Context Protocol tool definition",
                "properties": {
                    "name": {
                        "description": "Tool name",
                        "type": "string",
                        "example": "get_account_balance"
                    },
                    "description": {
                        "description": "Tool description",
                        "type": "string",
                        "example": "Retrieve account balance"
                    },
                    "category": {
                        "description": "Tool category",
                        "type": "string",
                        "example": "account_management"
                    },
                    "parameters": {
                        "description": "Tool parameters schema",
                        "type": "object"
                    },
                    "requires_auth": {
                        "description": "Authentication required",
                        "type": "boolean",
                        "example": true
                    },
                    "requires_2fa": {
                        "description": "2FA required",
                        "type": "boolean",
                        "example": false
                    },
                    "rate_limit": {
                        "description": "Rate limit per minute",
                        "type": "integer",
                        "example": 100
                    },
                    "cache_ttl": {
                        "description": "Cache TTL in seconds",
                        "type": "integer",
                        "example": 60
                    },
                    "ml_enabled": {
                        "description": "ML features enabled",
                        "type": "boolean",
                        "example": false
                    },
                    "real_time": {
                        "description": "Real-time processing",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "MCPToolExecution": {
                "title": "MCP Tool Execution",
                "description": "MCP tool execution request",
                "required": [
                    "parameters"
                ],
                "properties": {
                    "parameters": {
                        "description": "Tool-specific parameters",
                        "type": "object",
                        "example": {
                            "account_id": "acct_123",
                            "include_pending": true
                        }
                    },
                    "timeout": {
                        "description": "Execution timeout in ms",
                        "type": "integer",
                        "example": 5000
                    },
                    "async": {
                        "description": "Execute asynchronously",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "MCPToolResult": {
                "title": "MCP Tool Result",
                "description": "MCP tool execution result",
                "properties": {
                    "success": {
                        "description": "Execution success",
                        "type": "boolean",
                        "example": true
                    },
                    "tool": {
                        "description": "Tool name",
                        "type": "string",
                        "example": "get_account_balance"
                    },
                    "result": {
                        "description": "Tool execution result",
                        "type": "object"
                    },
                    "execution_time_ms": {
                        "description": "Execution time",
                        "type": "integer",
                        "example": 145
                    },
                    "error": {
                        "description": "Error message if failed",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Execution metadata",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AIConversation": {
                "title": "AI Conversation",
                "description": "AI conversation thread",
                "properties": {
                    "id": {
                        "description": "Conversation ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "conv_123e4567"
                    },
                    "title": {
                        "description": "Conversation title",
                        "type": "string",
                        "example": "Account Balance Inquiry"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 123
                    },
                    "messages": {
                        "description": "Conversation messages",
                        "type": "array",
                        "items": {
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "enum": [
                                        "user",
                                        "assistant",
                                        "system"
                                    ],
                                    "example": "user"
                                },
                                "content": {
                                    "type": "string",
                                    "example": "What is my balance?"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "context": {
                        "description": "Conversation context",
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AIFeedback": {
                "title": "AI Feedback",
                "description": "User feedback for AI response",
                "required": [
                    "message_id",
                    "rating"
                ],
                "properties": {
                    "message_id": {
                        "description": "Message ID to provide feedback for",
                        "type": "string",
                        "example": "msg_abc123"
                    },
                    "rating": {
                        "description": "Rating 1-5",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "feedback": {
                        "description": "Optional text feedback",
                        "type": "string",
                        "example": "Very helpful response"
                    },
                    "issues": {
                        "description": "Reported issues",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "incorrect_info",
                            "too_verbose"
                        ]
                    }
                },
                "type": "object"
            },
            "MCPToolRegistration": {
                "title": "MCP Tool Registration",
                "description": "Register a new MCP tool",
                "required": [
                    "name",
                    "description",
                    "endpoint",
                    "parameters"
                ],
                "properties": {
                    "name": {
                        "description": "Tool name",
                        "type": "string",
                        "example": "custom_analysis_tool"
                    },
                    "description": {
                        "description": "Tool description",
                        "type": "string",
                        "example": "Custom financial analysis tool"
                    },
                    "endpoint": {
                        "description": "Tool endpoint URL",
                        "type": "string",
                        "format": "url",
                        "example": "https://api.example.com/tool"
                    },
                    "parameters": {
                        "description": "Parameter schema",
                        "type": "object"
                    },
                    "category": {
                        "description": "Tool category",
                        "type": "string",
                        "example": "analysis"
                    },
                    "authentication": {
                        "description": "Authentication configuration",
                        "type": "object"
                    },
                    "rate_limit": {
                        "description": "Rate limit",
                        "type": "integer",
                        "example": 50
                    },
                    "timeout": {
                        "description": "Timeout in ms",
                        "type": "integer",
                        "example": 10000
                    }
                },
                "type": "object"
            },
            "AIWorkflow": {
                "title": "AI Workflow",
                "description": "AI-driven workflow definition",
                "properties": {
                    "id": {
                        "description": "Workflow ID",
                        "type": "string",
                        "example": "wf_789xyz"
                    },
                    "type": {
                        "description": "Workflow type",
                        "type": "string",
                        "example": "customer_service"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "running",
                            "completed",
                            "failed"
                        ],
                        "example": "running"
                    },
                    "steps": {
                        "description": "Workflow steps",
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "analyze_request"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "ai_analysis"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "completed"
                                },
                                "result": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "ai_config": {
                        "description": "AI configuration",
                        "type": "object"
                    },
                    "human_intervention": {
                        "description": "Human-in-the-loop config",
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SanctionsCheckResult": {
                "required": [
                    "checked_at",
                    "status",
                    "matches"
                ],
                "properties": {
                    "checked_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "clear",
                            "potential_match",
                            "confirmed_match"
                        ],
                        "example": "clear"
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "list_name": {
                                    "type": "string",
                                    "example": "OFAC SDN"
                                },
                                "match_score": {
                                    "type": "number",
                                    "example": 0.95
                                },
                                "entity_name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "reason": {
                                    "type": "string",
                                    "example": "Name and DOB match"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_check_date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "CustodianSettlement": {
                "required": [
                    "id",
                    "settlement_date",
                    "status",
                    "total_amount",
                    "transactions"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "settlement_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "total_amount": {
                        "properties": {
                            "EUR": {
                                "type": "integer",
                                "example": 1000000
                            },
                            "USD": {
                                "type": "integer",
                                "example": 500000
                            }
                        },
                        "type": "object"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "from_custodian": {
                                    "type": "string",
                                    "example": "paysera"
                                },
                                "to_custodian": {
                                    "type": "string",
                                    "example": "deutsche_bank"
                                },
                                "amount": {
                                    "type": "integer",
                                    "example": 250000
                                },
                                "currency": {
                                    "type": "string",
                                    "example": "EUR"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "net",
                                        "gross"
                                    ],
                                    "example": "net"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "settlement_method": {
                        "type": "string",
                        "enum": [
                            "net",
                            "gross",
                            "batch"
                        ],
                        "example": "net"
                    },
                    "executed_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RegulatoryNotification": {
                "required": [
                    "id",
                    "type",
                    "title",
                    "severity",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deadline",
                            "regulation_change",
                            "audit",
                            "inspection",
                            "violation"
                        ],
                        "example": "deadline"
                    },
                    "title": {
                        "type": "string",
                        "example": "CTR Submission Deadline Approaching"
                    },
                    "description": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "info",
                            "warning",
                            "urgent",
                            "critical"
                        ],
                        "example": "warning"
                    },
                    "regulator": {
                        "type": "string",
                        "example": "Bank of Lithuania"
                    },
                    "deadline": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "action_required": {
                        "type": "string"
                    },
                    "acknowledged": {
                        "type": "boolean",
                        "example": false
                    },
                    "acknowledged_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Account": {
                "title": "Account",
                "required": [
                    "uuid",
                    "user_uuid",
                    "name",
                    "balance",
                    "frozen"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "user_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "name": {
                        "type": "string",
                        "example": "Savings Account"
                    },
                    "balance": {
                        "description": "Balance in cents",
                        "type": "integer",
                        "example": 50000
                    },
                    "frozen": {
                        "description": "Whether the account is frozen",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "title": "Transaction",
                "required": [
                    "uuid",
                    "account_uuid",
                    "type",
                    "amount",
                    "balance_after",
                    "description",
                    "hash"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "770e8400-e29b-41d4-a716-446655440000"
                    },
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deposit",
                            "withdrawal"
                        ],
                        "example": "deposit"
                    },
                    "amount": {
                        "description": "Amount in cents",
                        "type": "integer",
                        "example": 10000
                    },
                    "balance_after": {
                        "description": "Balance after transaction in cents",
                        "type": "integer",
                        "example": 60000
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly salary deposit"
                    },
                    "hash": {
                        "description": "SHA3-512 transaction hash",
                        "type": "string",
                        "example": "3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Transfer": {
                "title": "Transfer",
                "required": [
                    "uuid",
                    "from_account_uuid",
                    "to_account_uuid",
                    "amount",
                    "description",
                    "status",
                    "hash"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "880e8400-e29b-41d4-a716-446655440000"
                    },
                    "from_account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "to_account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "amount": {
                        "description": "Amount in cents",
                        "type": "integer",
                        "example": 5000
                    },
                    "description": {
                        "type": "string",
                        "example": "Payment for services"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "hash": {
                        "description": "SHA3-512 transfer hash",
                        "type": "string",
                        "example": "4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:01Z",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Balance": {
                "title": "Balance",
                "required": [
                    "account_uuid",
                    "balance",
                    "frozen"
                ],
                "properties": {
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "balance": {
                        "description": "Current balance in cents",
                        "type": "integer",
                        "example": 50000
                    },
                    "frozen": {
                        "type": "boolean",
                        "example": false
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "turnover": {
                        "properties": {
                            "total_debit": {
                                "type": "integer",
                                "example": 100000
                            },
                            "total_credit": {
                                "type": "integer",
                                "example": 150000
                            },
                            "month": {
                                "type": "integer",
                                "example": 1
                            },
                            "year": {
                                "type": "integer",
                                "example": 2024
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Asset": {
                "title": "Asset",
                "required": [
                    "code",
                    "name",
                    "type",
                    "precision",
                    "is_active"
                ],
                "properties": {
                    "code": {
                        "description": "Asset code (e.g., USD, EUR, BTC)",
                        "type": "string",
                        "example": "USD"
                    },
                    "name": {
                        "type": "string",
                        "example": "US Dollar"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "fiat",
                            "crypto",
                            "commodity",
                            "custom"
                        ],
                        "example": "fiat"
                    },
                    "precision": {
                        "description": "Number of decimal places",
                        "type": "integer",
                        "example": 2
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "metadata": {
                        "description": "Additional asset metadata",
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "ExchangeRate": {
                "title": "Exchange Rate",
                "required": [
                    "from_asset_code",
                    "to_asset_code",
                    "rate",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "from_asset_code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "to_asset_code": {
                        "type": "string",
                        "example": "EUR"
                    },
                    "rate": {
                        "description": "Exchange rate with 10 decimal precision",
                        "type": "string",
                        "example": "0.8500000000"
                    },
                    "bid": {
                        "type": "string",
                        "example": "0.8495000000",
                        "nullable": true
                    },
                    "ask": {
                        "type": "string",
                        "example": "0.8505000000",
                        "nullable": true
                    },
                    "source": {
                        "description": "Rate source",
                        "type": "string",
                        "example": "manual"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "valid_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "AccountBalance": {
                "title": "Account Balance",
                "required": [
                    "account_uuid",
                    "asset_code",
                    "balance"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "account_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "asset_code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "balance": {
                        "description": "Balance in smallest unit (cents for USD)",
                        "type": "integer",
                        "example": 50000
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                },
                "type": "object"
            },
            "Poll": {
                "title": "Poll",
                "required": [
                    "id",
                    "title",
                    "type",
                    "status",
                    "options",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Should we add support for Japanese Yen?"
                    },
                    "description": {
                        "type": "string",
                        "example": "This poll determines whether to add JPY support to the platform",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "single_choice",
                            "multiple_choice",
                            "weighted_choice",
                            "yes_no",
                            "ranked_choice"
                        ],
                        "example": "yes_no"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "completed",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "yes"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "Yes, add JPY support"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "voting_power_strategy": {
                        "type": "string",
                        "example": "OneUserOneVoteStrategy"
                    },
                    "execution_workflow": {
                        "type": "string",
                        "example": "AddAssetWorkflow",
                        "nullable": true
                    },
                    "min_participation": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "winning_threshold": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5,
                        "nullable": true
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-08T00:00:00Z"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "votes_count": {
                        "description": "Total number of votes",
                        "type": "integer",
                        "example": 150
                    },
                    "total_voting_power": {
                        "description": "Total voting power cast",
                        "type": "integer",
                        "example": 500
                    }
                },
                "type": "object"
            },
            "Vote": {
                "title": "Vote",
                "required": [
                    "id",
                    "poll_id",
                    "user_uuid",
                    "selected_options",
                    "voting_power",
                    "voted_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "poll_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "660e8400-e29b-41d4-a716-446655440000"
                    },
                    "selected_options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "yes"
                        ]
                    },
                    "voting_power": {
                        "type": "integer",
                        "example": 10
                    },
                    "signature": {
                        "type": "string",
                        "example": "abc123def456",
                        "nullable": true
                    },
                    "voted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    }
                },
                "type": "object"
            },
            "PollResult": {
                "title": "Poll Result",
                "required": [
                    "poll",
                    "results",
                    "participation"
                ],
                "properties": {
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "results": {
                        "description": "Vote results by option",
                        "type": "object",
                        "example": {
                            "yes": {
                                "votes": 75,
                                "voting_power": 250
                            },
                            "no": {
                                "votes": 25,
                                "voting_power": 100
                            }
                        }
                    },
                    "participation": {
                        "properties": {
                            "total_votes": {
                                "type": "integer",
                                "example": 100
                            },
                            "total_voting_power": {
                                "type": "integer",
                                "example": 350
                            },
                            "participation_rate": {
                                "type": "number",
                                "format": "float",
                                "example": 0.25
                            },
                            "winning_option": {
                                "type": "string",
                                "example": "yes",
                                "nullable": true
                            },
                            "meets_threshold": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    },
                    "calculated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Error": {
                "title": "Error Response",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "error": {
                        "type": "string",
                        "example": "VALIDATION_ERROR",
                        "nullable": true
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error Response",
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ],
                            "amount": [
                                "The amount must be greater than 0."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "BasketAsset": {
                "title": "Basket Asset",
                "required": [
                    "code",
                    "name",
                    "type",
                    "components"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "STABLE_BASKET"
                    },
                    "name": {
                        "type": "string",
                        "example": "Stable Currency Basket"
                    },
                    "description": {
                        "type": "string",
                        "example": "A diversified basket of stable fiat currencies"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "fixed",
                            "dynamic"
                        ],
                        "example": "fixed"
                    },
                    "rebalance_frequency": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly",
                            "quarterly",
                            "never"
                        ],
                        "example": "never"
                    },
                    "last_rebalanced_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BasketComponent"
                        }
                    },
                    "latest_value": {
                        "properties": {
                            "value": {
                                "type": "number",
                                "format": "float",
                                "example": 1.0975
                            },
                            "calculated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "BasketComponent": {
                "title": "Basket Component",
                "required": [
                    "asset_code",
                    "weight"
                ],
                "properties": {
                    "asset_code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "asset_name": {
                        "type": "string",
                        "example": "US Dollar"
                    },
                    "weight": {
                        "description": "Weight percentage (0-100)",
                        "type": "number",
                        "format": "float",
                        "example": 40
                    },
                    "min_weight": {
                        "type": "number",
                        "format": "float",
                        "example": 35,
                        "nullable": true
                    },
                    "max_weight": {
                        "type": "number",
                        "format": "float",
                        "example": 45,
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "type": "object"
            },
            "BasketValue": {
                "title": "Basket Value",
                "required": [
                    "basket_code",
                    "value",
                    "calculated_at"
                ],
                "properties": {
                    "basket_code": {
                        "type": "string",
                        "example": "STABLE_BASKET"
                    },
                    "value": {
                        "description": "Current value in base currency (USD)",
                        "type": "number",
                        "format": "float",
                        "example": 1.0975
                    },
                    "calculated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "component_values": {
                        "description": "Breakdown of component values",
                        "type": "object",
                        "example": {
                            "USD": {
                                "value": 1,
                                "weight": 40,
                                "weighted_value": 0.4
                            },
                            "EUR": {
                                "value": 1.1,
                                "weight": 35,
                                "weighted_value": 0.385
                            },
                            "GBP": {
                                "value": 1.25,
                                "weight": 25,
                                "weighted_value": 0.3125
                            }
                        }
                    }
                },
                "type": "object"
            },
            "UserVotingPoll": {
                "title": "User Voting Poll",
                "required": [
                    "uuid",
                    "title",
                    "type",
                    "status",
                    "options",
                    "start_date",
                    "end_date",
                    "user_context"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "990e8400-e29b-41d4-a716-446655440000"
                    },
                    "title": {
                        "type": "string",
                        "example": "Monthly GCU Basket Allocation for June 2025"
                    },
                    "description": {
                        "type": "string",
                        "example": "Vote on the currency allocation for the Global Currency Unit basket",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "single_choice",
                            "multiple_choice",
                            "weighted_choice",
                            "yes_no",
                            "ranked_choice"
                        ],
                        "example": "weighted_choice"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "closed",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "USD"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "US Dollar"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T00:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-08T00:00:00Z"
                    },
                    "required_participation": {
                        "type": "number",
                        "format": "float",
                        "example": 25,
                        "nullable": true
                    },
                    "current_participation": {
                        "type": "number",
                        "format": "float",
                        "example": 15.5
                    },
                    "user_context": {
                        "properties": {
                            "has_voted": {
                                "type": "boolean",
                                "example": false
                            },
                            "voting_power": {
                                "type": "integer",
                                "example": 1000
                            },
                            "can_vote": {
                                "type": "boolean",
                                "example": true
                            },
                            "vote": {
                                "properties": {
                                    "selected_options": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "voted_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "metadata": {
                        "properties": {
                            "is_gcu_poll": {
                                "type": "boolean",
                                "example": true
                            },
                            "voting_month": {
                                "type": "string",
                                "example": "2025-06",
                                "nullable": true
                            },
                            "template": {
                                "type": "string",
                                "example": "monthly_gcu_allocation",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "results_visible": {
                        "type": "boolean",
                        "example": false
                    },
                    "time_remaining": {
                        "properties": {
                            "days": {
                                "type": "integer",
                                "example": 6
                            },
                            "hours": {
                                "type": "integer",
                                "example": 12
                            },
                            "human_readable": {
                                "type": "string",
                                "example": "6 days from now"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LiquidationCheckResult": {
                "required": [
                    "can_liquidate",
                    "liquidation_amount",
                    "reserve_after",
                    "ratio_after"
                ],
                "properties": {
                    "can_liquidate": {
                        "type": "boolean",
                        "example": true
                    },
                    "liquidation_amount": {
                        "description": "Maximum amount that can be liquidated",
                        "type": "integer",
                        "example": 50000
                    },
                    "current_reserve": {
                        "type": "integer",
                        "example": 1100000
                    },
                    "reserve_after": {
                        "description": "Reserve after liquidation",
                        "type": "integer",
                        "example": 1050000
                    },
                    "ratio_after": {
                        "description": "Reserve ratio after liquidation",
                        "type": "number",
                        "example": 1.05
                    },
                    "minimum_required_reserve": {
                        "type": "integer",
                        "example": 1000000
                    }
                },
                "type": "object"
            },
            "QueueMetrics": {
                "required": [
                    "queue_name",
                    "metrics"
                ],
                "properties": {
                    "queue_name": {
                        "type": "string",
                        "example": "transactions"
                    },
                    "metrics": {
                        "properties": {
                            "size": {
                                "description": "Current queue size",
                                "type": "integer",
                                "example": 125
                            },
                            "processing_rate": {
                                "description": "Jobs per second",
                                "type": "number",
                                "example": 15.5
                            },
                            "average_wait_time_ms": {
                                "type": "number",
                                "example": 850
                            },
                            "failed_jobs_24h": {
                                "type": "integer",
                                "example": 12
                            },
                            "workers": {
                                "description": "Active workers",
                                "type": "integer",
                                "example": 4
                            },
                            "memory_usage_mb": {
                                "type": "number",
                                "example": 256.5
                            }
                        },
                        "type": "object"
                    },
                    "job_types": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "ProcessTransferJob"
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 45
                                },
                                "average_duration_ms": {
                                    "type": "number",
                                    "example": 120
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "V2Error": {
                "properties": {
                    "message": {
                        "description": "V2 API Documentation Schemas",
                        "type": "string",
                        "example": "An error occurred"
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "V2ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "V2Pagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 20
                    },
                    "total": {
                        "type": "integer",
                        "example": 200
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "to": {
                        "type": "integer",
                        "example": 20
                    }
                },
                "type": "object"
            },
            "BasketPerformance": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "basket_code": {
                        "type": "string"
                    },
                    "period_type": {
                        "type": "string",
                        "enum": [
                            "hour",
                            "day",
                            "week",
                            "month",
                            "quarter",
                            "year",
                            "all_time"
                        ]
                    },
                    "period_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "start_value": {
                        "type": "number"
                    },
                    "end_value": {
                        "type": "number"
                    },
                    "high_value": {
                        "type": "number"
                    },
                    "low_value": {
                        "type": "number"
                    },
                    "average_value": {
                        "type": "number"
                    },
                    "return_value": {
                        "type": "number"
                    },
                    "return_percentage": {
                        "type": "number"
                    },
                    "formatted_return": {
                        "type": "string"
                    },
                    "volatility": {
                        "type": "number"
                    },
                    "sharpe_ratio": {
                        "type": "number"
                    },
                    "max_drawdown": {
                        "type": "number"
                    },
                    "performance_rating": {
                        "type": "string"
                    },
                    "risk_rating": {
                        "type": "string"
                    },
                    "annualized_return": {
                        "type": "number"
                    },
                    "value_count": {
                        "type": "integer"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComponentPerformance"
                        }
                    }
                },
                "type": "object"
            },
            "ComponentPerformance": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "basket_performance_id": {
                        "type": "integer"
                    },
                    "asset_code": {
                        "type": "string"
                    },
                    "asset_name": {
                        "type": "string"
                    },
                    "start_weight": {
                        "type": "number"
                    },
                    "end_weight": {
                        "type": "number"
                    },
                    "average_weight": {
                        "type": "number"
                    },
                    "weight_change": {
                        "type": "number"
                    },
                    "contribution_value": {
                        "type": "number"
                    },
                    "contribution_percentage": {
                        "type": "number"
                    },
                    "formatted_contribution": {
                        "type": "string"
                    },
                    "return_value": {
                        "type": "number"
                    },
                    "return_percentage": {
                        "type": "number"
                    },
                    "formatted_return": {
                        "type": "string"
                    },
                    "is_positive_contributor": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format: Bearer {token}",
                "scheme": "bearer"
            },
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "AI Agent",
            "description": "AI Agent chat and conversation management for intelligent banking assistance"
        },
        {
            "name": "Account Balances",
            "description": "APIs for managing multi-asset account balances"
        },
        {
            "name": "Assets",
            "description": "Asset and currency management"
        },
        {
            "name": "Authentication",
            "description": "User authentication and authorization"
        },
        {
            "name": "BIAN",
            "description": "BIAN-compliant banking service operations"
        },
        {
            "name": "Bank Alerting",
            "description": "Bank health monitoring and alerting system (Admin only)"
        },
        {
            "name": "Bank Allocation",
            "description": "User bank allocation preferences and fund distribution management"
        },
        {
            "name": "Basket Operations",
            "description": "Basket operations on accounts"
        },
        {
            "name": "Baskets",
            "description": "Multi-asset basket operations"
        },
        {
            "name": "Basket Performance",
            "description": "Basket asset performance tracking and analytics"
        },
        {
            "name": "Batch Processing",
            "description": "End-of-day batch operations and bulk financial processing"
        },
        {
            "name": "Custodians",
            "description": "External custodian bank integration and account management"
        },
        {
            "name": "Custodian Webhooks",
            "description": "Endpoints for receiving webhook notifications from custodian banks"
        },
        {
            "name": "Daily Reconciliation",
            "description": "Bank account reconciliation and reporting system (Admin only)"
        },
        {
            "name": "Accounts",
            "description": "Bank account management"
        },
        {
            "name": "Transactions",
            "description": "Transaction operations and history"
        },
        {
            "name": "Transfers",
            "description": "Money transfers between accounts"
        },
        {
            "name": "Balance",
            "description": "Balance inquiry and account statistics"
        },
        {
            "name": "MCP Tools",
            "description": "Model Context Protocol (MCP) tools management for AI agents"
        },
        {
            "name": "Exchange Rates",
            "description": "Currency exchange rate information"
        },
        {
            "name": "External Exchange",
            "description": "External exchange integration endpoints"
        },
        {
            "name": "GDPR",
            "description": "General Data Protection Regulation (GDPR) compliance operations"
        },
        {
            "name": "KYC",
            "description": "Know Your Customer (KYC) verification operations"
        },
        {
            "name": "Liquidity Pool",
            "description": "Liquidity pool management endpoints"
        },
        {
            "name": "Governance - Polls",
            "description": "Poll management and voting operations"
        },
        {
            "name": "Regulatory Reporting",
            "description": "Compliance and regulatory report generation and management"
        },
        {
            "name": "Stablecoins",
            "description": "Stablecoin management and operations"
        },
        {
            "name": "Stablecoin Operations",
            "description": "Stablecoin minting, burning, and collateral management"
        },
        {
            "name": "Transaction Reversal",
            "description": "Critical transaction reversal operations for error recovery"
        },
        {
            "name": "User Voting",
            "description": "User-friendly voting interface for GCU governance"
        },
        {
            "name": "GCU",
            "description": "Global Currency Unit operations"
        },
        {
            "name": "GCU Trading",
            "description": "Buy and sell Global Currency Unit operations"
        },
        {
            "name": "Public API",
            "description": "Public API endpoints for external developers"
        },
        {
            "name": "Webhooks",
            "description": "Webhook management for real-time event notifications"
        },
        {
            "name": "Governance - Votes",
            "description": "Vote management and history operations"
        },
        {
            "name": "Workflow Monitoring",
            "description": "Monitor and manage workflow executions, compensations, and saga patterns"
        },
        {
            "name": "Exchange",
            "description": "Exchange"
        },
        {
            "name": "GCU Voting",
            "description": "GCU Voting"
        }
    ]
}