<?php

namespace Tests\Security\Vulnerabilities;

use Tests\TestCase;
use PHPUnit\Framework\Attributes\Group;

#[Group('security')]
#[Group('vulnerabilities')]
class VulnerabilityTest extends TestCase
{
    /**
     * Test that no known vulnerabilities exist in dependencies.
     */
    public function test_no_known_vulnerabilities_in_dependencies(): void
    {
        // This is a placeholder test that would typically check for known vulnerabilities
        // In a real scenario, this might integrate with security scanning tools
        $this->assertTrue(true, 'Vulnerability scanning placeholder test');
    }

    /**
     * Test that sensitive files are not exposed.
     */
    public function test_sensitive_files_not_exposed(): void
    {
        $sensitiveFiles = [
            '.env',
            '.env.example',
            'phpunit.xml',
            'composer.lock',
        ];

        foreach ($sensitiveFiles as $file) {
            $response = $this->get('/' . $file);
            $this->assertNotEquals(200, $response->status(), "Sensitive file {$file} should not be accessible");
        }
    }

    /**
     * Test that debug mode is disabled in production.
     */
    public function test_debug_mode_disabled(): void
    {
        // In testing environment, we skip this check
        if (app()->environment('testing')) {
            $this->assertTrue(true, 'Skipping debug mode check in testing environment');
            return;
        }

        $this->assertFalse(config('app.debug'), 'Debug mode should be disabled in production');
    }
}
