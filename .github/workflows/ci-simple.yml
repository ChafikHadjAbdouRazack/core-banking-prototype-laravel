name: Simple CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.3'
  NODE_VERSION: '20'

permissions:
  contents: read
  pull-requests: write
  checks: write

concurrency:
  group: ci-simple-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, dom, fileinfo, mysql, redis, opcache
          tools: composer:v2, phpstan, phpcs, php-cs-fixer
          coverage: none
          
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader
        
      - name: Run PHP Code Sniffer
        run: vendor/bin/phpcs --standard=PSR12 --exclude=Generic.Files.LineLength app/ || true
        
      - name: Run PHP Static Analysis
        run: vendor/bin/phpstan analyse --memory-limit=2G || true

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, dom, fileinfo, mysql, redis, opcache, pcntl, gd, bcmath, intl, zip
          tools: composer:v2
          coverage: xdebug
          
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader
          
      - name: Prepare Laravel Application
        run: |
          cp .env.testing .env
          php artisan key:generate
          php artisan migrate --force
          
      - name: Run Unit Tests
        run: ./vendor/bin/pest --configuration=phpunit.unit.xml --parallel || true

  feature-tests:
    name: Feature Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, dom, fileinfo, mysql, redis, opcache, pcntl, gd, bcmath, intl, zip
          tools: composer:v2
          coverage: none
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          composer install --prefer-dist --no-progress --optimize-autoloader
          npm ci --prefer-offline --no-audit
          npm run build
          
      - name: Prepare Laravel Application
        run: |
          cp .env.testing .env
          php artisan key:generate
          php artisan config:cache
          php artisan route:cache
          php artisan migrate --force
          
      - name: Run Feature Tests
        run: ./vendor/bin/pest --testsuite=Feature --configuration=phpunit.ci.xml --parallel || true

  behat-tests:
    name: Behat Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, dom, fileinfo, mysql, redis, opcache, pcntl, gd, bcmath, intl, zip, curl
          tools: composer:v2
          coverage: none
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          composer install --prefer-dist --no-progress --optimize-autoloader
          npm ci --prefer-offline --no-audit
          npm run build
          
      - name: Prepare Laravel Application
        run: |
          cp .env.testing .env
          php artisan key:generate
          php artisan config:cache
          php artisan route:cache
          php artisan migrate --force
          
      - name: Run Behat Tests
        run: vendor/bin/behat || true

  final-status:
    name: Pipeline Status
    needs: [code-quality, unit-tests, feature-tests, behat-tests]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Check Results
        run: |
          echo "Code Quality: ${{ needs.code-quality.result }}"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "Feature Tests: ${{ needs.feature-tests.result }}"
          echo "Behat Tests: ${{ needs.behat-tests.result }}"
          echo "âœ… Simple pipeline completed"